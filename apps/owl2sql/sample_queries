# Uses annotations from examples to get LM Source and Target

SELECT vm.name AS 'CM',
	mf.name AS 'Target Domain',
	srcVS.name AS 'Source Concept', 
	tarVS.name AS 'Target Concept',
	hasSen.value AS 'Text Fragment',
	TRIM('\"' FROM TRIM(SUBSTRING_INDEX(srcAnn.value, '=', 1))) AS 'LM Source',
	TRIM('\"' FROM TRIM(SUBSTRING_INDEX(tarAnn.value, '=', 1))) AS 'LM Target'
FROM Individual vm
LEFT JOIN ObjectPropertyInstance hasEx
ON hasEx.property = 'hasExample' AND
	hasEx.domainClass = 'VettedMetaphor' AND
	hasEx.domainIndividual = vm.name AND
	hasEx.rangeClass = 'Example'
LEFT JOIN Individual ex
ON ex.class = 'Example' AND
	ex.name = hasEx.rangeIndividual
LEFT JOIN DataPropertyInstance hasSen
ON hasSen.property = 'hasSentence' AND
	hasSen.domainClass = 'Example' AND
	hasSen.domainIndividual = ex.name
JOIN ObjectPropertyInstance hasSrcSch
ON hasSrcSch.property = 'hasSourceSchema' AND
	hasSrcSch.domainClass = 'VettedMetaphor' AND
	hasSrcSch.domainIndividual = vm.name AND
	hasSrcSch.rangeClass = 'VettedSchema'
JOIN Individual srcVS
ON srcVS.class = 'VettedSchema' AND
	srcVS.name = hasSrcSch.rangeIndividual
JOIN ObjectPropertyInstance hasTarSch
ON hasTarSch.property = 'hasTargetSchema' AND
	hasTarSch.domainClass = 'VettedMetaphor' AND
	hasTarSch.domainIndividual = vm.name AND
	hasTarSch.rangeClass = 'VettedSchema'
JOIN Individual tarVS
ON tarVS.class = 'VettedSchema' AND
	tarVS.name = hasTarSch.rangeIndividual
LEFT JOIN ObjectPropertyInstance inMF
ON inMF.property = 'isInMetaphorFamily' AND
	inMF.domainClass = 'VettedMetaphor' AND
	inMF.domainIndividual = vm.name AND
	inMF.rangeClass = 'MetaphorFamily'
LEFT JOIN Individual mf
ON mf.class = 'MetaphorFamily' AND
	mf.name = inMF.rangeIndividual
LEFT JOIN DataPropertyInstance srcAnn
ON srcAnn.property = 'hasAnnotation' AND
	srcAnn.domainIndividual = ex.name AND
	srcAnn.value REGEXP '.+=.+(Source)'
LEFT JOIN DataPropertyInstance tarAnn
ON tarAnn.property = 'hasAnnotation' AND
	tarAnn.domainIndividual = ex.name AND
	tarAnn.value REGEXP '.+=.+(Target)'
WHERE vm.class = 'VettedMetaphor'


# Uses LinguisticMetaphors linked to VettedMetaphors to find LM Source and 
# Target

SELECT vm.name AS 'CM',
	mf.name AS 'Target Domain',
	srcVS.name AS 'Source Concept', 
	tarVS.name AS 'Target Concept',
	hasSen.value AS 'Text Fragment',
	hasLS.value AS 'LM Source',
	hasLT.value AS 'LM Target'
FROM Individual vm
LEFT JOIN ObjectPropertyInstance hasEx
ON hasEx.property = 'hasExample' AND
	hasEx.domainClass = 'VettedMetaphor' AND
	hasEx.domainIndividual = vm.name AND
	hasEx.rangeClass = 'Example'
LEFT JOIN Individual ex
ON ex.class = 'Example' AND
	ex.name = hasEx.rangeIndividual
LEFT JOIN DataPropertyInstance hasSen
ON hasSen.property = 'hasSentence' AND
	hasSen.domainClass = 'Example' AND
	hasSen.domainIndividual = ex.name
JOIN ObjectPropertyInstance hasSrcSch
ON hasSrcSch.property = 'hasSourceSchema' AND
	hasSrcSch.domainClass = 'VettedMetaphor' AND
	hasSrcSch.domainIndividual = vm.name AND
	hasSrcSch.rangeClass = 'VettedSchema'
JOIN Individual srcVS
ON srcVS.class = 'VettedSchema' AND
	srcVS.name = hasSrcSch.rangeIndividual
JOIN ObjectPropertyInstance hasTarSch
ON hasTarSch.property = 'hasTargetSchema' AND
	hasTarSch.domainClass = 'VettedMetaphor' AND
	hasTarSch.domainIndividual = vm.name AND
	hasTarSch.rangeClass = 'VettedSchema'
JOIN Individual tarVS
ON tarVS.class = 'VettedSchema' AND
	tarVS.name = hasTarSch.rangeIndividual
LEFT JOIN ObjectPropertyInstance inMF
ON inMF.property = 'isInMetaphorFamily' AND
	inMF.domainClass = 'VettedMetaphor' AND
	inMF.domainIndividual = vm.name AND
	inMF.rangeClass = 'MetaphorFamily'
LEFT JOIN Individual mf
ON mf.class = 'MetaphorFamily' AND
	mf.name = inMF.rangeIndividual
LEFT JOIN ObjectPropertyInstance isInst
ON isInst.property = 'isInstanceOfMetaphor' AND
	isInst.rangeIndividual = vm.name
LEFT JOIN Individual lm
ON lm.class = 'LinguisticMetaphor' AND
	lm.name = isInst.domainIndividual
LEFT JOIN DataPropertyInstance hasLS
ON hasLS.property = 'hasLinguisticSource' AND
	hasLS.domainIndividual = lm.name
LEFT JOIN DataPropertyInstance hasLT
ON hasLT.property = 'hasLinguisticTarget' AND
	hasLT.domainIndividual = lm.name
WHERE vm.class = 'VettedMetaphor'


CREATE TABLE ConceptualMetaphor
(ID INT NOT NULL AUTO_INCREMENT, CM_Ref VARCHAR(255) NOT NULL, 
Name VARCHAR(255) NULL, Family VARCHAR(255) NULL, Target VARCHAR(255) NULL, 
Source VARCHAR(255) NULL, PRIMARY KEY(ID), INDEX(CM_Ref))
SELECT CM.name AS "CM_Ref", 
TRIM(SUBSTR(REPLACE(CMhasName.value,'"^^xsd:string',''), 2)) AS 'Name', 
TRIM(SUBSTR(REPLACE(famName.value,'"^^xsd:string',''), 2)) AS 'Family', 
TRIM(SUBSTR(REPLACE(Tname.value,'"^^xsd:string',''), 2)) AS 'Target', 
TRIM(SUBSTR(REPLACE(Sname.value,'"^^xsd:string',''), 2)) AS 'Source' 
FROM Individual CM
JOIN DataPropertyInstance CMhasName ON CM.class='VettedMetaphor' AND CMhasName.property='hasName' AND CMhasName.domainIndividual=CM.name 
LEFT JOIN ObjectPropertyInstance hasFam ON CM.name=hasFam.domainIndividual  AND hasFam.property='isInMetaphorFamily' 
LEFT JOIN Individual fam ON fam.name=hasFam.rangeIndividual 
LEFT JOIN DataPropertyInstance famName ON famName.property='hasName' AND famName.domainIndividual=fam.name
JOIN ObjectPropertyInstance hasTarget ON hasTarget.property='hasTargetSchema' AND hasTarget.domainIndividual = CM.name 
JOIN Individual T ON hasTarget.rangeIndividual=T.name 
JOIN ObjectPropertyInstance hasSource ON hasSource.property="hasSourceSchema" AND hasSource.domainIndividual = CM.name 
JOIN Individual S ON hasSource.rangeIndividual=S.name 
JOIN DataPropertyInstance Tname ON Tname.property='hasName' AND Tname.domainIndividual=T.name 
JOIN DataPropertyInstance Sname ON Sname.property='hasName' AND Sname.domainIndividual=S.name; 

CREATE TABLE Example (ID INT NOT NULL AUTO_INCREMENT, LM_Ref VARCHAR(255) NULL, Target VARCHAR(255) NULL, Source VARCHAR(255) NULL, Text TEXT NULL, CM_Ref VARCHAR(255) NULL, PRIMARY KEY(ID), INDEX(CM_Ref)) SELECT LM.name AS "LM_Ref", TRIM(SUBSTR(REPLACE(T.value,'"^^xsd:string',''),2)) AS "Target", TRIM(SUBSTR(REPLACE(S.value,'"^^xsd:string',''),2)) AS "Source", TRIM(SUBSTR(REPLACE(hasText.value,'"^^xsd:string',''),2)) AS 'Text', hasInst.rangeIndividual AS 'CM_Ref' FROM Individual Ex LEFT JOIN ObjectPropertyInstance hasEx ON Ex.name=hasEx.rangeIndividual AND Ex.class='Example' JOIN DataPropertyInstance hasText ON hasText.property="hasSentence" AND hasText.domainIndividual=Ex.name JOIN Individual LM ON hasEx.domainIndividual=LM.name JOIN DataPropertyInstance T ON T.property='hasLinguisticTarget' AND T.domainIndividual=LM.name JOIN DataPropertyInstance S ON S.property='hasLinguisticSource' AND S.domainIndividual=LM.name LEFT JOIN ObjectPropertyInstance hasInst ON hasInst.property='isInstanceOfMetaphor' AND hasInst.domainIndividual=LM.name;

INSERT INTO Example (LM_Ref, Target, Source, Text, CM_Ref) SELECT NULL, NULL, NULL, TRIM(SUBSTR(REPLACE(hasText.value,'"^^xsd:string',''),2)) AS 'Text', CM.name AS "CM_Ref" FROM Individual Ex LEFT JOIN ObjectPropertyInstance hasEx ON Ex.name=hasEx.rangeIndividual AND Ex.class='Example' JOIN DataPropertyInstance hasText ON hasText.property="hasSentence" AND hasText.domainIndividual=Ex.name JOIN Individual CM ON hasEx.domainIndividual=CM.name AND CM.class='VettedMetaphor';

SELECT m.Family AS "Target Domain", m.Target as "Target Concept", m.Source as "Source Concept", e.Text as "Text Fragment", e.Target as "LM Target", e.Source as "LM Source" FROM ConceptualMetaphor m LEFT JOIN Example e ON m.CM_Ref=e.CM_Ref;
