
    /* ***************************************************
     * Functional Data Property ${propertyIri}
     */
     
    public ${propertyRangeForClass} get${OwlProperty}() {
        // for functional properties, return either the first value or null
	Collection<? extends ${propertyRangeForClass}> c = getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.${VocabProperty}, ${propertyRangeForClass}.class);
        if (c.isEmpty()) return null;
        return (${propertyRangeForClass})c.iterator().next();
    }

    public boolean has${OwlProperty}() {
	return get${OwlProperty}() != null;
    }

    public void add${OwlProperty}(${propertyRange} new${OwlProperty}) {
	getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.${VocabProperty}, new${OwlProperty});
    }

    public void remove${OwlProperty}(${propertyRange} old${OwlProperty}) {
	getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.${VocabProperty}, old${OwlProperty});
    }

