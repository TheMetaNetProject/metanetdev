.. java:import:: java.util Collection

.. java:import:: org.protege.owl.codegeneration WrappedIndividual

.. java:import:: org.semanticweb.owlapi.model OWLNamedIndividual

.. java:import:: org.semanticweb.owlapi.model OWLOntology

SchemaFamily
============

.. java:package:: edu.berkeley.icsi.metanet.repository
   :noindex:

.. java:type:: public interface SchemaFamily extends WrappedIndividual

   Generated by Protege (http://protege.stanford.edu).  Source Class: SchemaFamily

Methods
-------
addHasAlias
^^^^^^^^^^^

.. java:method::  void addHasAlias(Object newHasAlias)
   :outertype: SchemaFamily

   Adds a hasAlias property value.

   :param newHasAlias: the hasAlias property value to be added

addHasExample
^^^^^^^^^^^^^

.. java:method::  void addHasExample(Example newHasExample)
   :outertype: SchemaFamily

   Adds a hasExample property value.

   :param newHasExample: the hasExample property value to be added

addHasName
^^^^^^^^^^

.. java:method::  void addHasName(String newHasName)
   :outertype: SchemaFamily

   Adds a hasName property value.

   :param newHasName: the hasName property value to be added

addHasNameGloss
^^^^^^^^^^^^^^^

.. java:method::  void addHasNameGloss(String newHasNameGloss)
   :outertype: SchemaFamily

   Adds a hasNameGloss property value.

   :param newHasNameGloss: the hasNameGloss property value to be added

addHasSchemas
^^^^^^^^^^^^^

.. java:method::  void addHasSchemas(Schema newHasSchemas)
   :outertype: SchemaFamily

   Adds a hasSchemas property value.

   :param newHasSchemas: the hasSchemas property value to be added

addIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method::  void addIsFromLanguage(String newIsFromLanguage)
   :outertype: SchemaFamily

   Adds a isFromLanguage property value.

   :param newIsFromLanguage: the isFromLanguage property value to be added

addIsSchemaSubfamilyOf
^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void addIsSchemaSubfamilyOf(SchemaFamily newIsSchemaSubfamilyOf)
   :outertype: SchemaFamily

   Adds a isSchemaSubfamilyOf property value.

   :param newIsSchemaSubfamilyOf: the isSchemaSubfamilyOf property value to be added

addIsSchemaSuperfamilyOf
^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void addIsSchemaSuperfamilyOf(SchemaFamily newIsSchemaSuperfamilyOf)
   :outertype: SchemaFamily

   Adds a isSchemaSuperfamilyOf property value.

   :param newIsSchemaSuperfamilyOf: the isSchemaSuperfamilyOf property value to be added

delete
^^^^^^

.. java:method::  void delete()
   :outertype: SchemaFamily

getHasAlias
^^^^^^^^^^^

.. java:method::  Collection<? extends String> getHasAlias()
   :outertype: SchemaFamily

   Gets all property values for the hasAlias property.

getHasExample
^^^^^^^^^^^^^

.. java:method::  Collection<? extends Example> getHasExample()
   :outertype: SchemaFamily

   Gets all property values for the hasExample property.

getHasName
^^^^^^^^^^

.. java:method::  String getHasName()
   :outertype: SchemaFamily

   Gets the value for the hasName functional property.

getHasNameGloss
^^^^^^^^^^^^^^^

.. java:method::  String getHasNameGloss()
   :outertype: SchemaFamily

   Gets the value for the hasNameGloss functional property.

getHasSchemas
^^^^^^^^^^^^^

.. java:method::  Collection<? extends Schema> getHasSchemas()
   :outertype: SchemaFamily

   Gets all property values for the hasSchemas property.

getIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method::  String getIsFromLanguage()
   :outertype: SchemaFamily

   Gets the value for the isFromLanguage functional property.

getIsSchemaSubfamilyOf
^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  Collection<? extends SchemaFamily> getIsSchemaSubfamilyOf()
   :outertype: SchemaFamily

   Gets all property values for the isSchemaSubfamilyOf property.

getIsSchemaSuperfamilyOf
^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  Collection<? extends SchemaFamily> getIsSchemaSuperfamilyOf()
   :outertype: SchemaFamily

   Gets all property values for the isSchemaSuperfamilyOf property.

getOwlIndividual
^^^^^^^^^^^^^^^^

.. java:method::  OWLNamedIndividual getOwlIndividual()
   :outertype: SchemaFamily

getOwlOntology
^^^^^^^^^^^^^^

.. java:method::  OWLOntology getOwlOntology()
   :outertype: SchemaFamily

hasHasAlias
^^^^^^^^^^^

.. java:method::  boolean hasHasAlias()
   :outertype: SchemaFamily

   Checks if the class has a hasAlias property value.

   :return: true if there is a hasAlias property value.

hasHasExample
^^^^^^^^^^^^^

.. java:method::  boolean hasHasExample()
   :outertype: SchemaFamily

   Checks if the class has a hasExample property value.

   :return: true if there is a hasExample property value.

hasHasName
^^^^^^^^^^

.. java:method::  boolean hasHasName()
   :outertype: SchemaFamily

   Checks if the class has a hasName property value.

   :return: true if there is a hasName property value.

hasHasNameGloss
^^^^^^^^^^^^^^^

.. java:method::  boolean hasHasNameGloss()
   :outertype: SchemaFamily

   Checks if the class has a hasNameGloss property value.

   :return: true if there is a hasNameGloss property value.

hasHasSchemas
^^^^^^^^^^^^^

.. java:method::  boolean hasHasSchemas()
   :outertype: SchemaFamily

   Checks if the class has a hasSchemas property value.

   :return: true if there is a hasSchemas property value.

hasIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method::  boolean hasIsFromLanguage()
   :outertype: SchemaFamily

   Checks if the class has a isFromLanguage property value.

   :return: true if there is a isFromLanguage property value.

hasIsSchemaSubfamilyOf
^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  boolean hasIsSchemaSubfamilyOf()
   :outertype: SchemaFamily

   Checks if the class has a isSchemaSubfamilyOf property value.

   :return: true if there is a isSchemaSubfamilyOf property value.

hasIsSchemaSuperfamilyOf
^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  boolean hasIsSchemaSuperfamilyOf()
   :outertype: SchemaFamily

   Checks if the class has a isSchemaSuperfamilyOf property value.

   :return: true if there is a isSchemaSuperfamilyOf property value.

removeHasAlias
^^^^^^^^^^^^^^

.. java:method::  void removeHasAlias(Object oldHasAlias)
   :outertype: SchemaFamily

   Removes a hasAlias property value.

   :param oldHasAlias: the hasAlias property value to be removed.

removeHasExample
^^^^^^^^^^^^^^^^

.. java:method::  void removeHasExample(Example oldHasExample)
   :outertype: SchemaFamily

   Removes a hasExample property value.

   :param oldHasExample: the hasExample property value to be removed.

removeHasName
^^^^^^^^^^^^^

.. java:method::  void removeHasName(String oldHasName)
   :outertype: SchemaFamily

   Removes a hasName property value.

   :param oldHasName: the hasName property value to be removed.

removeHasNameGloss
^^^^^^^^^^^^^^^^^^

.. java:method::  void removeHasNameGloss(String oldHasNameGloss)
   :outertype: SchemaFamily

   Removes a hasNameGloss property value.

   :param oldHasNameGloss: the hasNameGloss property value to be removed.

removeHasSchemas
^^^^^^^^^^^^^^^^

.. java:method::  void removeHasSchemas(Schema oldHasSchemas)
   :outertype: SchemaFamily

   Removes a hasSchemas property value.

   :param oldHasSchemas: the hasSchemas property value to be removed.

removeIsFromLanguage
^^^^^^^^^^^^^^^^^^^^

.. java:method::  void removeIsFromLanguage(String oldIsFromLanguage)
   :outertype: SchemaFamily

   Removes a isFromLanguage property value.

   :param oldIsFromLanguage: the isFromLanguage property value to be removed.

removeIsSchemaSubfamilyOf
^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void removeIsSchemaSubfamilyOf(SchemaFamily oldIsSchemaSubfamilyOf)
   :outertype: SchemaFamily

   Removes a isSchemaSubfamilyOf property value.

   :param oldIsSchemaSubfamilyOf: the isSchemaSubfamilyOf property value to be removed.

removeIsSchemaSuperfamilyOf
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void removeIsSchemaSuperfamilyOf(SchemaFamily oldIsSchemaSuperfamilyOf)
   :outertype: SchemaFamily

   Removes a isSchemaSuperfamilyOf property value.

   :param oldIsSchemaSuperfamilyOf: the isSchemaSuperfamilyOf property value to be removed.

