.. java:import:: java.util Collection

.. java:import:: org.protege.owl.codegeneration WrappedIndividual

.. java:import:: org.protege.owl.codegeneration.impl WrappedIndividualImpl

.. java:import:: org.protege.owl.codegeneration.inference CodeGenerationInference

.. java:import:: org.semanticweb.owlapi.model IRI

.. java:import:: org.semanticweb.owlapi.model OWLOntology

DefaultMapping
==============

.. java:package:: edu.berkeley.icsi.metanet.repository.impl
   :noindex:

.. java:type:: public class DefaultMapping extends WrappedIndividualImpl implements Mapping

   Generated by Protege (http://protege.stanford.edu). Source Class: DefaultMapping

Constructors
------------
DefaultMapping
^^^^^^^^^^^^^^

.. java:constructor:: public DefaultMapping(OWLOntology ontology, IRI iri, CodeGenerationInference inf)
   :outertype: DefaultMapping

Methods
-------
addHasAlias
^^^^^^^^^^^

.. java:method:: public void addHasAlias(Object newHasAlias)
   :outertype: DefaultMapping

addHasExample
^^^^^^^^^^^^^

.. java:method:: public void addHasExample(Example newHasExample)
   :outertype: DefaultMapping

addHasName
^^^^^^^^^^

.. java:method:: public void addHasName(String newHasName)
   :outertype: DefaultMapping

addHasNameGloss
^^^^^^^^^^^^^^^

.. java:method:: public void addHasNameGloss(String newHasNameGloss)
   :outertype: DefaultMapping

addHasSourceRole
^^^^^^^^^^^^^^^^

.. java:method:: public void addHasSourceRole(Role newHasSourceRole)
   :outertype: DefaultMapping

addHasTargetRole
^^^^^^^^^^^^^^^^

.. java:method:: public void addHasTargetRole(Role newHasTargetRole)
   :outertype: DefaultMapping

addIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method:: public void addIsFromLanguage(String newIsFromLanguage)
   :outertype: DefaultMapping

addIsMappingUsedByMetaphors
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addIsMappingUsedByMetaphors(Metaphor newIsMappingUsedByMetaphors)
   :outertype: DefaultMapping

addSupportsEntailments
^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addSupportsEntailments(Entailment newSupportsEntailments)
   :outertype: DefaultMapping

getHasAlias
^^^^^^^^^^^

.. java:method:: public Collection<? extends String> getHasAlias()
   :outertype: DefaultMapping

getHasExample
^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Example> getHasExample()
   :outertype: DefaultMapping

getHasName
^^^^^^^^^^

.. java:method:: public String getHasName()
   :outertype: DefaultMapping

getHasNameGloss
^^^^^^^^^^^^^^^

.. java:method:: public String getHasNameGloss()
   :outertype: DefaultMapping

getHasSourceRole
^^^^^^^^^^^^^^^^

.. java:method:: public Role getHasSourceRole()
   :outertype: DefaultMapping

getHasTargetRole
^^^^^^^^^^^^^^^^

.. java:method:: public Role getHasTargetRole()
   :outertype: DefaultMapping

getIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method:: public String getIsFromLanguage()
   :outertype: DefaultMapping

getIsMappingUsedByMetaphors
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Metaphor> getIsMappingUsedByMetaphors()
   :outertype: DefaultMapping

getSupportsEntailments
^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Entailment> getSupportsEntailments()
   :outertype: DefaultMapping

hasHasAlias
^^^^^^^^^^^

.. java:method:: public boolean hasHasAlias()
   :outertype: DefaultMapping

hasHasExample
^^^^^^^^^^^^^

.. java:method:: public boolean hasHasExample()
   :outertype: DefaultMapping

hasHasName
^^^^^^^^^^

.. java:method:: public boolean hasHasName()
   :outertype: DefaultMapping

hasHasNameGloss
^^^^^^^^^^^^^^^

.. java:method:: public boolean hasHasNameGloss()
   :outertype: DefaultMapping

hasHasSourceRole
^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasHasSourceRole()
   :outertype: DefaultMapping

hasHasTargetRole
^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasHasTargetRole()
   :outertype: DefaultMapping

hasIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasIsFromLanguage()
   :outertype: DefaultMapping

hasIsMappingUsedByMetaphors
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasIsMappingUsedByMetaphors()
   :outertype: DefaultMapping

hasSupportsEntailments
^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasSupportsEntailments()
   :outertype: DefaultMapping

removeHasAlias
^^^^^^^^^^^^^^

.. java:method:: public void removeHasAlias(Object oldHasAlias)
   :outertype: DefaultMapping

removeHasExample
^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasExample(Example oldHasExample)
   :outertype: DefaultMapping

removeHasName
^^^^^^^^^^^^^

.. java:method:: public void removeHasName(String oldHasName)
   :outertype: DefaultMapping

removeHasNameGloss
^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasNameGloss(String oldHasNameGloss)
   :outertype: DefaultMapping

removeHasSourceRole
^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasSourceRole(Role oldHasSourceRole)
   :outertype: DefaultMapping

removeHasTargetRole
^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasTargetRole(Role oldHasTargetRole)
   :outertype: DefaultMapping

removeIsFromLanguage
^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeIsFromLanguage(String oldIsFromLanguage)
   :outertype: DefaultMapping

removeIsMappingUsedByMetaphors
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeIsMappingUsedByMetaphors(Metaphor oldIsMappingUsedByMetaphors)
   :outertype: DefaultMapping

removeSupportsEntailments
^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeSupportsEntailments(Entailment oldSupportsEntailments)
   :outertype: DefaultMapping

