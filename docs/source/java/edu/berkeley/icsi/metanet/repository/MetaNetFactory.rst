.. java:import:: java.util Collection

.. java:import:: org.protege.owl.codegeneration CodeGenerationFactory

.. java:import:: org.protege.owl.codegeneration WrappedIndividual

.. java:import:: org.protege.owl.codegeneration.impl FactoryHelper

.. java:import:: org.protege.owl.codegeneration.impl ProtegeJavaMapping

.. java:import:: org.protege.owl.codegeneration.inference CodeGenerationInference

.. java:import:: org.protege.owl.codegeneration.inference SimpleInference

.. java:import:: org.semanticweb.owlapi.model OWLClass

.. java:import:: org.semanticweb.owlapi.model OWLOntology

.. java:import:: org.semanticweb.owlapi.model OWLOntologyStorageException

MetaNetFactory
==============

.. java:package:: edu.berkeley.icsi.metanet.repository
   :noindex:

.. java:type:: public class MetaNetFactory implements CodeGenerationFactory

   A class that serves as the entry point to the generated code providing access to existing individuals in the ontology and the ability to create new individuals in the ontology.

   Generated by Protege (http://protege.stanford.edu). Source Class: MetaNetFactory

Constructors
------------
MetaNetFactory
^^^^^^^^^^^^^^

.. java:constructor:: public MetaNetFactory(OWLOntology ontology)
   :outertype: MetaNetFactory

MetaNetFactory
^^^^^^^^^^^^^^

.. java:constructor:: public MetaNetFactory(OWLOntology ontology, CodeGenerationInference inference)
   :outertype: MetaNetFactory

Methods
-------
as
^^

.. java:method:: public <X extends WrappedIndividual> X as(WrappedIndividual resource, Class<? extends X> javaInterface)
   :outertype: MetaNetFactory

canAs
^^^^^

.. java:method:: public boolean canAs(WrappedIndividual resource, Class<? extends WrappedIndividual> javaInterface)
   :outertype: MetaNetFactory

createAutoMetaphor
^^^^^^^^^^^^^^^^^^

.. java:method:: public AutoMetaphor createAutoMetaphor(String name)
   :outertype: MetaNetFactory

   Creates an instance of type AutoMetaphor. Modifies the underlying ontology.

createAutoSchema
^^^^^^^^^^^^^^^^

.. java:method:: public AutoSchema createAutoSchema(String name)
   :outertype: MetaNetFactory

   Creates an instance of type AutoSchema. Modifies the underlying ontology.

createBinding
^^^^^^^^^^^^^

.. java:method:: public Binding createBinding(String name)
   :outertype: MetaNetFactory

   Creates an instance of type Binding. Modifies the underlying ontology.

createEntailment
^^^^^^^^^^^^^^^^

.. java:method:: public Entailment createEntailment(String name)
   :outertype: MetaNetFactory

   Creates an instance of type Entailment. Modifies the underlying ontology.

createExample
^^^^^^^^^^^^^

.. java:method:: public Example createExample(String name)
   :outertype: MetaNetFactory

   Creates an instance of type Example. Modifies the underlying ontology.

createInference
^^^^^^^^^^^^^^^

.. java:method:: public Inference createInference(String name)
   :outertype: MetaNetFactory

   Creates an instance of type Inference. Modifies the underlying ontology.

createLexicalUnit
^^^^^^^^^^^^^^^^^

.. java:method:: public LexicalUnit createLexicalUnit(String name)
   :outertype: MetaNetFactory

   Creates an instance of type LexicalUnit. Modifies the underlying ontology.

createLinguisticMetaphor
^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public LinguisticMetaphor createLinguisticMetaphor(String name)
   :outertype: MetaNetFactory

   Creates an instance of type LinguisticMetaphor. Modifies the underlying ontology.

createMapping
^^^^^^^^^^^^^

.. java:method:: public Mapping createMapping(String name)
   :outertype: MetaNetFactory

   Creates an instance of type Mapping. Modifies the underlying ontology.

createMetaphor
^^^^^^^^^^^^^^

.. java:method:: public Metaphor createMetaphor(String name)
   :outertype: MetaNetFactory

   Creates an instance of type Metaphor. Modifies the underlying ontology.

createMetaphorFamily
^^^^^^^^^^^^^^^^^^^^

.. java:method:: public MetaphorFamily createMetaphorFamily(String name)
   :outertype: MetaNetFactory

   Creates an instance of type MetaphorFamily. Modifies the underlying ontology.

createRole
^^^^^^^^^^

.. java:method:: public Role createRole(String name)
   :outertype: MetaNetFactory

   Creates an instance of type Role. Modifies the underlying ontology.

createSchema
^^^^^^^^^^^^

.. java:method:: public Schema createSchema(String name)
   :outertype: MetaNetFactory

   Creates an instance of type Schema. Modifies the underlying ontology.

createSchemaFamily
^^^^^^^^^^^^^^^^^^

.. java:method:: public SchemaFamily createSchemaFamily(String name)
   :outertype: MetaNetFactory

   Creates an instance of type SchemaFamily. Modifies the underlying ontology.

createVettedMetaphor
^^^^^^^^^^^^^^^^^^^^

.. java:method:: public VettedMetaphor createVettedMetaphor(String name)
   :outertype: MetaNetFactory

   Creates an instance of type VettedMetaphor. Modifies the underlying ontology.

createVettedSchema
^^^^^^^^^^^^^^^^^^

.. java:method:: public VettedSchema createVettedSchema(String name)
   :outertype: MetaNetFactory

   Creates an instance of type VettedSchema. Modifies the underlying ontology.

flushOwlReasoner
^^^^^^^^^^^^^^^^

.. java:method:: public void flushOwlReasoner()
   :outertype: MetaNetFactory

getAllAutoMetaphorInstances
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends AutoMetaphor> getAllAutoMetaphorInstances()
   :outertype: MetaNetFactory

   Gets all instances of AutoMetaphor from the ontology.

getAllAutoSchemaInstances
^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends AutoSchema> getAllAutoSchemaInstances()
   :outertype: MetaNetFactory

   Gets all instances of AutoSchema from the ontology.

getAllBindingInstances
^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Binding> getAllBindingInstances()
   :outertype: MetaNetFactory

   Gets all instances of Binding from the ontology.

getAllEntailmentInstances
^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Entailment> getAllEntailmentInstances()
   :outertype: MetaNetFactory

   Gets all instances of Entailment from the ontology.

getAllExampleInstances
^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Example> getAllExampleInstances()
   :outertype: MetaNetFactory

   Gets all instances of Example from the ontology.

getAllInferenceInstances
^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Inference> getAllInferenceInstances()
   :outertype: MetaNetFactory

   Gets all instances of Inference from the ontology.

getAllLexicalUnitInstances
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends LexicalUnit> getAllLexicalUnitInstances()
   :outertype: MetaNetFactory

   Gets all instances of LexicalUnit from the ontology.

getAllLinguisticMetaphorInstances
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends LinguisticMetaphor> getAllLinguisticMetaphorInstances()
   :outertype: MetaNetFactory

   Gets all instances of LinguisticMetaphor from the ontology.

getAllMappingInstances
^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Mapping> getAllMappingInstances()
   :outertype: MetaNetFactory

   Gets all instances of Mapping from the ontology.

getAllMetaphorFamilyInstances
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends MetaphorFamily> getAllMetaphorFamilyInstances()
   :outertype: MetaNetFactory

   Gets all instances of MetaphorFamily from the ontology.

getAllMetaphorInstances
^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Metaphor> getAllMetaphorInstances()
   :outertype: MetaNetFactory

   Gets all instances of Metaphor from the ontology.

getAllRoleInstances
^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Role> getAllRoleInstances()
   :outertype: MetaNetFactory

   Gets all instances of Role from the ontology.

getAllSchemaFamilyInstances
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends SchemaFamily> getAllSchemaFamilyInstances()
   :outertype: MetaNetFactory

   Gets all instances of SchemaFamily from the ontology.

getAllSchemaInstances
^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Schema> getAllSchemaInstances()
   :outertype: MetaNetFactory

   Gets all instances of Schema from the ontology.

getAllVettedMetaphorInstances
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends VettedMetaphor> getAllVettedMetaphorInstances()
   :outertype: MetaNetFactory

   Gets all instances of VettedMetaphor from the ontology.

getAllVettedSchemaInstances
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends VettedSchema> getAllVettedSchemaInstances()
   :outertype: MetaNetFactory

   Gets all instances of VettedSchema from the ontology.

getAutoMetaphor
^^^^^^^^^^^^^^^

.. java:method:: public AutoMetaphor getAutoMetaphor(String name)
   :outertype: MetaNetFactory

   Gets an instance of type AutoMetaphor with the given name. Does not modify the underlying ontology.

   :param name: the name of the OWL named individual to be retrieved.

getAutoSchema
^^^^^^^^^^^^^

.. java:method:: public AutoSchema getAutoSchema(String name)
   :outertype: MetaNetFactory

   Gets an instance of type AutoSchema with the given name. Does not modify the underlying ontology.

   :param name: the name of the OWL named individual to be retrieved.

getBinding
^^^^^^^^^^

.. java:method:: public Binding getBinding(String name)
   :outertype: MetaNetFactory

   Gets an instance of type Binding with the given name. Does not modify the underlying ontology.

   :param name: the name of the OWL named individual to be retrieved.

getEntailment
^^^^^^^^^^^^^

.. java:method:: public Entailment getEntailment(String name)
   :outertype: MetaNetFactory

   Gets an instance of type Entailment with the given name. Does not modify the underlying ontology.

   :param name: the name of the OWL named individual to be retrieved.

getExample
^^^^^^^^^^

.. java:method:: public Example getExample(String name)
   :outertype: MetaNetFactory

   Gets an instance of type Example with the given name. Does not modify the underlying ontology.

   :param name: the name of the OWL named individual to be retrieved.

getInference
^^^^^^^^^^^^

.. java:method:: public CodeGenerationInference getInference()
   :outertype: MetaNetFactory

getInference
^^^^^^^^^^^^

.. java:method:: public Inference getInference(String name)
   :outertype: MetaNetFactory

   Gets an instance of type Inference with the given name. Does not modify the underlying ontology.

   :param name: the name of the OWL named individual to be retrieved.

getJavaInterfaceFromOwlClass
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Class<?> getJavaInterfaceFromOwlClass(OWLClass cls)
   :outertype: MetaNetFactory

getLexicalUnit
^^^^^^^^^^^^^^

.. java:method:: public LexicalUnit getLexicalUnit(String name)
   :outertype: MetaNetFactory

   Gets an instance of type LexicalUnit with the given name. Does not modify the underlying ontology.

   :param name: the name of the OWL named individual to be retrieved.

getLinguisticMetaphor
^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public LinguisticMetaphor getLinguisticMetaphor(String name)
   :outertype: MetaNetFactory

   Gets an instance of type LinguisticMetaphor with the given name. Does not modify the underlying ontology.

   :param name: the name of the OWL named individual to be retrieved.

getMapping
^^^^^^^^^^

.. java:method:: public Mapping getMapping(String name)
   :outertype: MetaNetFactory

   Gets an instance of type Mapping with the given name. Does not modify the underlying ontology.

   :param name: the name of the OWL named individual to be retrieved.

getMetaphor
^^^^^^^^^^^

.. java:method:: public Metaphor getMetaphor(String name)
   :outertype: MetaNetFactory

   Gets an instance of type Metaphor with the given name. Does not modify the underlying ontology.

   :param name: the name of the OWL named individual to be retrieved.

getMetaphorFamily
^^^^^^^^^^^^^^^^^

.. java:method:: public MetaphorFamily getMetaphorFamily(String name)
   :outertype: MetaNetFactory

   Gets an instance of type MetaphorFamily with the given name. Does not modify the underlying ontology.

   :param name: the name of the OWL named individual to be retrieved.

getOwlClassFromJavaInterface
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public OWLClass getOwlClassFromJavaInterface(Class<?> javaInterface)
   :outertype: MetaNetFactory

getOwlOntology
^^^^^^^^^^^^^^

.. java:method:: public OWLOntology getOwlOntology()
   :outertype: MetaNetFactory

getRole
^^^^^^^

.. java:method:: public Role getRole(String name)
   :outertype: MetaNetFactory

   Gets an instance of type Role with the given name. Does not modify the underlying ontology.

   :param name: the name of the OWL named individual to be retrieved.

getSchema
^^^^^^^^^

.. java:method:: public Schema getSchema(String name)
   :outertype: MetaNetFactory

   Gets an instance of type Schema with the given name. Does not modify the underlying ontology.

   :param name: the name of the OWL named individual to be retrieved.

getSchemaFamily
^^^^^^^^^^^^^^^

.. java:method:: public SchemaFamily getSchemaFamily(String name)
   :outertype: MetaNetFactory

   Gets an instance of type SchemaFamily with the given name. Does not modify the underlying ontology.

   :param name: the name of the OWL named individual to be retrieved.

getVettedMetaphor
^^^^^^^^^^^^^^^^^

.. java:method:: public VettedMetaphor getVettedMetaphor(String name)
   :outertype: MetaNetFactory

   Gets an instance of type VettedMetaphor with the given name. Does not modify the underlying ontology.

   :param name: the name of the OWL named individual to be retrieved.

getVettedSchema
^^^^^^^^^^^^^^^

.. java:method:: public VettedSchema getVettedSchema(String name)
   :outertype: MetaNetFactory

   Gets an instance of type VettedSchema with the given name. Does not modify the underlying ontology.

   :param name: the name of the OWL named individual to be retrieved.

saveOwlOntology
^^^^^^^^^^^^^^^

.. java:method:: public void saveOwlOntology() throws OWLOntologyStorageException
   :outertype: MetaNetFactory

