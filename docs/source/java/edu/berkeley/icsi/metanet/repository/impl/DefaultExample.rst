.. java:import:: java.util Collection

.. java:import:: org.protege.owl.codegeneration WrappedIndividual

.. java:import:: org.protege.owl.codegeneration.impl WrappedIndividualImpl

.. java:import:: org.protege.owl.codegeneration.inference CodeGenerationInference

.. java:import:: org.semanticweb.owlapi.model IRI

.. java:import:: org.semanticweb.owlapi.model OWLOntology

DefaultExample
==============

.. java:package:: edu.berkeley.icsi.metanet.repository.impl
   :noindex:

.. java:type:: public class DefaultExample extends WrappedIndividualImpl implements Example

   Generated by Protege (http://protege.stanford.edu). Source Class: DefaultExample

Constructors
------------
DefaultExample
^^^^^^^^^^^^^^

.. java:constructor:: public DefaultExample(OWLOntology ontology, IRI iri, CodeGenerationInference inf)
   :outertype: DefaultExample

Methods
-------
addHasAlias
^^^^^^^^^^^

.. java:method:: public void addHasAlias(Object newHasAlias)
   :outertype: DefaultExample

addHasAnnotation
^^^^^^^^^^^^^^^^

.. java:method:: public void addHasAnnotation(String newHasAnnotation)
   :outertype: DefaultExample

addHasExample
^^^^^^^^^^^^^

.. java:method:: public void addHasExample(Example newHasExample)
   :outertype: DefaultExample

addHasName
^^^^^^^^^^

.. java:method:: public void addHasName(String newHasName)
   :outertype: DefaultExample

addHasNameGloss
^^^^^^^^^^^^^^^

.. java:method:: public void addHasNameGloss(String newHasNameGloss)
   :outertype: DefaultExample

addHasSentence
^^^^^^^^^^^^^^

.. java:method:: public void addHasSentence(String newHasSentence)
   :outertype: DefaultExample

addHasSentenceGloss
^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addHasSentenceGloss(String newHasSentenceGloss)
   :outertype: DefaultExample

addHasSentenceTranslation
^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addHasSentenceTranslation(String newHasSentenceTranslation)
   :outertype: DefaultExample

addIsExampleOfMetaphor
^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addIsExampleOfMetaphor(WrappedIndividual newIsExampleOfMetaphor)
   :outertype: DefaultExample

addIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method:: public void addIsFromLanguage(String newIsFromLanguage)
   :outertype: DefaultExample

getHasAlias
^^^^^^^^^^^

.. java:method:: public Collection<? extends String> getHasAlias()
   :outertype: DefaultExample

getHasAnnotation
^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends String> getHasAnnotation()
   :outertype: DefaultExample

getHasExample
^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Example> getHasExample()
   :outertype: DefaultExample

getHasName
^^^^^^^^^^

.. java:method:: public String getHasName()
   :outertype: DefaultExample

getHasNameGloss
^^^^^^^^^^^^^^^

.. java:method:: public String getHasNameGloss()
   :outertype: DefaultExample

getHasSentence
^^^^^^^^^^^^^^

.. java:method:: public String getHasSentence()
   :outertype: DefaultExample

getHasSentenceGloss
^^^^^^^^^^^^^^^^^^^

.. java:method:: public String getHasSentenceGloss()
   :outertype: DefaultExample

getHasSentenceTranslation
^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public String getHasSentenceTranslation()
   :outertype: DefaultExample

getIsExampleOfMetaphor
^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends WrappedIndividual> getIsExampleOfMetaphor()
   :outertype: DefaultExample

getIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method:: public String getIsFromLanguage()
   :outertype: DefaultExample

hasHasAlias
^^^^^^^^^^^

.. java:method:: public boolean hasHasAlias()
   :outertype: DefaultExample

hasHasAnnotation
^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasHasAnnotation()
   :outertype: DefaultExample

hasHasExample
^^^^^^^^^^^^^

.. java:method:: public boolean hasHasExample()
   :outertype: DefaultExample

hasHasName
^^^^^^^^^^

.. java:method:: public boolean hasHasName()
   :outertype: DefaultExample

hasHasNameGloss
^^^^^^^^^^^^^^^

.. java:method:: public boolean hasHasNameGloss()
   :outertype: DefaultExample

hasHasSentence
^^^^^^^^^^^^^^

.. java:method:: public boolean hasHasSentence()
   :outertype: DefaultExample

hasHasSentenceGloss
^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasHasSentenceGloss()
   :outertype: DefaultExample

hasHasSentenceTranslation
^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasHasSentenceTranslation()
   :outertype: DefaultExample

hasIsExampleOfMetaphor
^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasIsExampleOfMetaphor()
   :outertype: DefaultExample

hasIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasIsFromLanguage()
   :outertype: DefaultExample

removeHasAlias
^^^^^^^^^^^^^^

.. java:method:: public void removeHasAlias(Object oldHasAlias)
   :outertype: DefaultExample

removeHasAnnotation
^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasAnnotation(String oldHasAnnotation)
   :outertype: DefaultExample

removeHasExample
^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasExample(Example oldHasExample)
   :outertype: DefaultExample

removeHasName
^^^^^^^^^^^^^

.. java:method:: public void removeHasName(String oldHasName)
   :outertype: DefaultExample

removeHasNameGloss
^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasNameGloss(String oldHasNameGloss)
   :outertype: DefaultExample

removeHasSentence
^^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasSentence(String oldHasSentence)
   :outertype: DefaultExample

removeHasSentenceGloss
^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasSentenceGloss(String oldHasSentenceGloss)
   :outertype: DefaultExample

removeHasSentenceTranslation
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasSentenceTranslation(String oldHasSentenceTranslation)
   :outertype: DefaultExample

removeIsExampleOfMetaphor
^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeIsExampleOfMetaphor(WrappedIndividual oldIsExampleOfMetaphor)
   :outertype: DefaultExample

removeIsFromLanguage
^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeIsFromLanguage(String oldIsFromLanguage)
   :outertype: DefaultExample

