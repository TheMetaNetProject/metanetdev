.. java:import:: java.util Collection

.. java:import:: org.protege.owl.codegeneration WrappedIndividual

.. java:import:: org.protege.owl.codegeneration.impl WrappedIndividualImpl

.. java:import:: org.protege.owl.codegeneration.inference CodeGenerationInference

.. java:import:: org.semanticweb.owlapi.model IRI

.. java:import:: org.semanticweb.owlapi.model OWLOntology

DefaultAutoSchema
=================

.. java:package:: edu.berkeley.icsi.metanet.repository.impl
   :noindex:

.. java:type:: public class DefaultAutoSchema extends WrappedIndividualImpl implements AutoSchema

   Generated by Protege (http://protege.stanford.edu). Source Class: DefaultAutoSchema

Constructors
------------
DefaultAutoSchema
^^^^^^^^^^^^^^^^^

.. java:constructor:: public DefaultAutoSchema(OWLOntology ontology, IRI iri, CodeGenerationInference inf)
   :outertype: DefaultAutoSchema

Methods
-------
addCorrespondsToFrameNet
^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addCorrespondsToFrameNet(String newCorrespondsToFrameNet)
   :outertype: DefaultAutoSchema

addHasAlias
^^^^^^^^^^^

.. java:method:: public void addHasAlias(Object newHasAlias)
   :outertype: DefaultAutoSchema

addHasBindings
^^^^^^^^^^^^^^

.. java:method:: public void addHasBindings(Binding newHasBindings)
   :outertype: DefaultAutoSchema

addHasCulturalContent
^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addHasCulturalContent(String newHasCulturalContent)
   :outertype: DefaultAutoSchema

addHasExample
^^^^^^^^^^^^^

.. java:method:: public void addHasExample(Example newHasExample)
   :outertype: DefaultAutoSchema

addHasInference
^^^^^^^^^^^^^^^

.. java:method:: public void addHasInference(Inference newHasInference)
   :outertype: DefaultAutoSchema

addHasLexicalUnit
^^^^^^^^^^^^^^^^^

.. java:method:: public void addHasLexicalUnit(LexicalUnit newHasLexicalUnit)
   :outertype: DefaultAutoSchema

addHasName
^^^^^^^^^^

.. java:method:: public void addHasName(String newHasName)
   :outertype: DefaultAutoSchema

addHasNameGloss
^^^^^^^^^^^^^^^

.. java:method:: public void addHasNameGloss(String newHasNameGloss)
   :outertype: DefaultAutoSchema

addHasRoles
^^^^^^^^^^^

.. java:method:: public void addHasRoles(Role newHasRoles)
   :outertype: DefaultAutoSchema

addHasSchemaType
^^^^^^^^^^^^^^^^

.. java:method:: public void addHasSchemaType(String newHasSchemaType)
   :outertype: DefaultAutoSchema

addIsApplicableToLanguage
^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addIsApplicableToLanguage(String newIsApplicableToLanguage)
   :outertype: DefaultAutoSchema

addIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method:: public void addIsFromLanguage(String newIsFromLanguage)
   :outertype: DefaultAutoSchema

addIsInSchemaFamily
^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addIsInSchemaFamily(SchemaFamily newIsInSchemaFamily)
   :outertype: DefaultAutoSchema

addIsRelatedToSchema
^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addIsRelatedToSchema(Schema newIsRelatedToSchema)
   :outertype: DefaultAutoSchema

addIsSourceDomainOfMetaphors
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addIsSourceDomainOfMetaphors(Metaphor newIsSourceDomainOfMetaphors)
   :outertype: DefaultAutoSchema

addIsSubcaseOfSchema
^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addIsSubcaseOfSchema(Schema newIsSubcaseOfSchema)
   :outertype: DefaultAutoSchema

addIsSubprocessOfSchema
^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addIsSubprocessOfSchema(Schema newIsSubprocessOfSchema)
   :outertype: DefaultAutoSchema

addIsSupercaseOfSchema
^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addIsSupercaseOfSchema(Schema newIsSupercaseOfSchema)
   :outertype: DefaultAutoSchema

addIsSuperprocessOfSchema
^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addIsSuperprocessOfSchema(Schema newIsSuperprocessOfSchema)
   :outertype: DefaultAutoSchema

addIsTargetDomainOfMetaphors
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addIsTargetDomainOfMetaphors(Metaphor newIsTargetDomainOfMetaphors)
   :outertype: DefaultAutoSchema

addIsUsedBySchema
^^^^^^^^^^^^^^^^^

.. java:method:: public void addIsUsedBySchema(Schema newIsUsedBySchema)
   :outertype: DefaultAutoSchema

addMakesUseOfSchema
^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addMakesUseOfSchema(Schema newMakesUseOfSchema)
   :outertype: DefaultAutoSchema

getCorrespondsToFrameNet
^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends String> getCorrespondsToFrameNet()
   :outertype: DefaultAutoSchema

getHasAlias
^^^^^^^^^^^

.. java:method:: public Collection<? extends Object> getHasAlias()
   :outertype: DefaultAutoSchema

getHasBindings
^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Binding> getHasBindings()
   :outertype: DefaultAutoSchema

getHasCulturalContent
^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public String getHasCulturalContent()
   :outertype: DefaultAutoSchema

getHasExample
^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Example> getHasExample()
   :outertype: DefaultAutoSchema

getHasInference
^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Inference> getHasInference()
   :outertype: DefaultAutoSchema

getHasLexicalUnit
^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends LexicalUnit> getHasLexicalUnit()
   :outertype: DefaultAutoSchema

getHasName
^^^^^^^^^^

.. java:method:: public String getHasName()
   :outertype: DefaultAutoSchema

getHasNameGloss
^^^^^^^^^^^^^^^

.. java:method:: public String getHasNameGloss()
   :outertype: DefaultAutoSchema

getHasRoles
^^^^^^^^^^^

.. java:method:: public Collection<? extends Role> getHasRoles()
   :outertype: DefaultAutoSchema

getHasSchemaType
^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends String> getHasSchemaType()
   :outertype: DefaultAutoSchema

getIsApplicableToLanguage
^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends String> getIsApplicableToLanguage()
   :outertype: DefaultAutoSchema

getIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method:: public String getIsFromLanguage()
   :outertype: DefaultAutoSchema

getIsInSchemaFamily
^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends SchemaFamily> getIsInSchemaFamily()
   :outertype: DefaultAutoSchema

getIsRelatedToSchema
^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Schema> getIsRelatedToSchema()
   :outertype: DefaultAutoSchema

getIsSourceDomainOfMetaphors
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Metaphor> getIsSourceDomainOfMetaphors()
   :outertype: DefaultAutoSchema

getIsSubcaseOfSchema
^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Schema> getIsSubcaseOfSchema()
   :outertype: DefaultAutoSchema

getIsSubprocessOfSchema
^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Schema> getIsSubprocessOfSchema()
   :outertype: DefaultAutoSchema

getIsSupercaseOfSchema
^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Schema> getIsSupercaseOfSchema()
   :outertype: DefaultAutoSchema

getIsSuperprocessOfSchema
^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Schema> getIsSuperprocessOfSchema()
   :outertype: DefaultAutoSchema

getIsTargetDomainOfMetaphors
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Metaphor> getIsTargetDomainOfMetaphors()
   :outertype: DefaultAutoSchema

getIsUsedBySchema
^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Schema> getIsUsedBySchema()
   :outertype: DefaultAutoSchema

getMakesUseOfSchema
^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Schema> getMakesUseOfSchema()
   :outertype: DefaultAutoSchema

hasCorrespondsToFrameNet
^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasCorrespondsToFrameNet()
   :outertype: DefaultAutoSchema

hasHasAlias
^^^^^^^^^^^

.. java:method:: public boolean hasHasAlias()
   :outertype: DefaultAutoSchema

hasHasBindings
^^^^^^^^^^^^^^

.. java:method:: public boolean hasHasBindings()
   :outertype: DefaultAutoSchema

hasHasCulturalContent
^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasHasCulturalContent()
   :outertype: DefaultAutoSchema

hasHasExample
^^^^^^^^^^^^^

.. java:method:: public boolean hasHasExample()
   :outertype: DefaultAutoSchema

hasHasInference
^^^^^^^^^^^^^^^

.. java:method:: public boolean hasHasInference()
   :outertype: DefaultAutoSchema

hasHasLexicalUnit
^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasHasLexicalUnit()
   :outertype: DefaultAutoSchema

hasHasName
^^^^^^^^^^

.. java:method:: public boolean hasHasName()
   :outertype: DefaultAutoSchema

hasHasNameGloss
^^^^^^^^^^^^^^^

.. java:method:: public boolean hasHasNameGloss()
   :outertype: DefaultAutoSchema

hasHasRoles
^^^^^^^^^^^

.. java:method:: public boolean hasHasRoles()
   :outertype: DefaultAutoSchema

hasHasSchemaType
^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasHasSchemaType()
   :outertype: DefaultAutoSchema

hasIsApplicableToLanguage
^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasIsApplicableToLanguage()
   :outertype: DefaultAutoSchema

hasIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasIsFromLanguage()
   :outertype: DefaultAutoSchema

hasIsInSchemaFamily
^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasIsInSchemaFamily()
   :outertype: DefaultAutoSchema

hasIsRelatedToSchema
^^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasIsRelatedToSchema()
   :outertype: DefaultAutoSchema

hasIsSourceDomainOfMetaphors
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasIsSourceDomainOfMetaphors()
   :outertype: DefaultAutoSchema

hasIsSubcaseOfSchema
^^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasIsSubcaseOfSchema()
   :outertype: DefaultAutoSchema

hasIsSubprocessOfSchema
^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasIsSubprocessOfSchema()
   :outertype: DefaultAutoSchema

hasIsSupercaseOfSchema
^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasIsSupercaseOfSchema()
   :outertype: DefaultAutoSchema

hasIsSuperprocessOfSchema
^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasIsSuperprocessOfSchema()
   :outertype: DefaultAutoSchema

hasIsTargetDomainOfMetaphors
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasIsTargetDomainOfMetaphors()
   :outertype: DefaultAutoSchema

hasIsUsedBySchema
^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasIsUsedBySchema()
   :outertype: DefaultAutoSchema

hasMakesUseOfSchema
^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasMakesUseOfSchema()
   :outertype: DefaultAutoSchema

removeCorrespondsToFrameNet
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeCorrespondsToFrameNet(String oldCorrespondsToFrameNet)
   :outertype: DefaultAutoSchema

removeHasAlias
^^^^^^^^^^^^^^

.. java:method:: public void removeHasAlias(Object oldHasAlias)
   :outertype: DefaultAutoSchema

removeHasBindings
^^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasBindings(Binding oldHasBindings)
   :outertype: DefaultAutoSchema

removeHasCulturalContent
^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasCulturalContent(String oldHasCulturalContent)
   :outertype: DefaultAutoSchema

removeHasExample
^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasExample(Example oldHasExample)
   :outertype: DefaultAutoSchema

removeHasInference
^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasInference(Inference oldHasInference)
   :outertype: DefaultAutoSchema

removeHasLexicalUnit
^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasLexicalUnit(LexicalUnit oldHasLexicalUnit)
   :outertype: DefaultAutoSchema

removeHasName
^^^^^^^^^^^^^

.. java:method:: public void removeHasName(String oldHasName)
   :outertype: DefaultAutoSchema

removeHasNameGloss
^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasNameGloss(String oldHasNameGloss)
   :outertype: DefaultAutoSchema

removeHasRoles
^^^^^^^^^^^^^^

.. java:method:: public void removeHasRoles(Role oldHasRoles)
   :outertype: DefaultAutoSchema

removeHasSchemaType
^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasSchemaType(String oldHasSchemaType)
   :outertype: DefaultAutoSchema

removeIsApplicableToLanguage
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeIsApplicableToLanguage(String oldIsApplicableToLanguage)
   :outertype: DefaultAutoSchema

removeIsFromLanguage
^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeIsFromLanguage(String oldIsFromLanguage)
   :outertype: DefaultAutoSchema

removeIsInSchemaFamily
^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeIsInSchemaFamily(SchemaFamily oldIsInSchemaFamily)
   :outertype: DefaultAutoSchema

removeIsRelatedToSchema
^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeIsRelatedToSchema(Schema oldIsRelatedToSchema)
   :outertype: DefaultAutoSchema

removeIsSourceDomainOfMetaphors
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeIsSourceDomainOfMetaphors(Metaphor oldIsSourceDomainOfMetaphors)
   :outertype: DefaultAutoSchema

removeIsSubcaseOfSchema
^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeIsSubcaseOfSchema(Schema oldIsSubcaseOfSchema)
   :outertype: DefaultAutoSchema

removeIsSubprocessOfSchema
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeIsSubprocessOfSchema(Schema oldIsSubprocessOfSchema)
   :outertype: DefaultAutoSchema

removeIsSupercaseOfSchema
^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeIsSupercaseOfSchema(Schema oldIsSupercaseOfSchema)
   :outertype: DefaultAutoSchema

removeIsSuperprocessOfSchema
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeIsSuperprocessOfSchema(Schema oldIsSuperprocessOfSchema)
   :outertype: DefaultAutoSchema

removeIsTargetDomainOfMetaphors
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeIsTargetDomainOfMetaphors(Metaphor oldIsTargetDomainOfMetaphors)
   :outertype: DefaultAutoSchema

removeIsUsedBySchema
^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeIsUsedBySchema(Schema oldIsUsedBySchema)
   :outertype: DefaultAutoSchema

removeMakesUseOfSchema
^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeMakesUseOfSchema(Schema oldMakesUseOfSchema)
   :outertype: DefaultAutoSchema

