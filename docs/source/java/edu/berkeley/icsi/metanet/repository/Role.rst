.. java:import:: java.util Collection

.. java:import:: org.protege.owl.codegeneration WrappedIndividual

.. java:import:: org.semanticweb.owlapi.model OWLNamedIndividual

.. java:import:: org.semanticweb.owlapi.model OWLOntology

Role
====

.. java:package:: edu.berkeley.icsi.metanet.repository
   :noindex:

.. java:type:: public interface Role extends WrappedIndividual

   Generated by Protege (http://protege.stanford.edu).  Source Class: Role

Methods
-------
addCorrespondsToFrameElement
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void addCorrespondsToFrameElement(String newCorrespondsToFrameElement)
   :outertype: Role

   Adds a correspondsToFrameElement property value.

   :param newCorrespondsToFrameElement: the correspondsToFrameElement property value to be added

addHasAlias
^^^^^^^^^^^

.. java:method::  void addHasAlias(Object newHasAlias)
   :outertype: Role

   Adds a hasAlias property value.

   :param newHasAlias: the hasAlias property value to be added

addHasDefinition
^^^^^^^^^^^^^^^^

.. java:method::  void addHasDefinition(String newHasDefinition)
   :outertype: Role

   Adds a hasDefinition property value.

   :param newHasDefinition: the hasDefinition property value to be added

addHasExample
^^^^^^^^^^^^^

.. java:method::  void addHasExample(Example newHasExample)
   :outertype: Role

   Adds a hasExample property value.

   :param newHasExample: the hasExample property value to be added

addHasName
^^^^^^^^^^

.. java:method::  void addHasName(String newHasName)
   :outertype: Role

   Adds a hasName property value.

   :param newHasName: the hasName property value to be added

addHasNameGloss
^^^^^^^^^^^^^^^

.. java:method::  void addHasNameGloss(String newHasNameGloss)
   :outertype: Role

   Adds a hasNameGloss property value.

   :param newHasNameGloss: the hasNameGloss property value to be added

addHasRoleType
^^^^^^^^^^^^^^

.. java:method::  void addHasRoleType(String newHasRoleType)
   :outertype: Role

   Adds a hasRoleType property value.

   :param newHasRoleType: the hasRoleType property value to be added

addIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method::  void addIsFromLanguage(String newIsFromLanguage)
   :outertype: Role

   Adds a isFromLanguage property value.

   :param newIsFromLanguage: the isFromLanguage property value to be added

addIsRoleOfSchema
^^^^^^^^^^^^^^^^^

.. java:method::  void addIsRoleOfSchema(Schema newIsRoleOfSchema)
   :outertype: Role

   Adds a isRoleOfSchema property value.

   :param newIsRoleOfSchema: the isRoleOfSchema property value to be added

addParticipatesInBinding
^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void addParticipatesInBinding(Binding newParticipatesInBinding)
   :outertype: Role

   Adds a participatesInBinding property value.

   :param newParticipatesInBinding: the participatesInBinding property value to be added

delete
^^^^^^

.. java:method::  void delete()
   :outertype: Role

getCorrespondsToFrameElement
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  Collection<? extends String> getCorrespondsToFrameElement()
   :outertype: Role

   Gets all property values for the correspondsToFrameElement property.

getHasAlias
^^^^^^^^^^^

.. java:method::  Collection<? extends String> getHasAlias()
   :outertype: Role

   Gets all property values for the hasAlias property.

getHasDefinition
^^^^^^^^^^^^^^^^

.. java:method::  String getHasDefinition()
   :outertype: Role

   Gets the value for the hasDefinition functional property.

getHasExample
^^^^^^^^^^^^^

.. java:method::  Collection<? extends Example> getHasExample()
   :outertype: Role

   Gets all property values for the hasExample property.

getHasName
^^^^^^^^^^

.. java:method::  String getHasName()
   :outertype: Role

   Gets the value for the hasName functional property.

getHasNameGloss
^^^^^^^^^^^^^^^

.. java:method::  String getHasNameGloss()
   :outertype: Role

   Gets the value for the hasNameGloss functional property.

getHasRoleType
^^^^^^^^^^^^^^

.. java:method::  String getHasRoleType()
   :outertype: Role

   Gets the value for the hasRoleType functional property.

getIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method::  String getIsFromLanguage()
   :outertype: Role

   Gets the value for the isFromLanguage functional property.

getIsRoleOfSchema
^^^^^^^^^^^^^^^^^

.. java:method::  Schema getIsRoleOfSchema()
   :outertype: Role

   Gets the property value for the isRoleOfSchema functional property.

getOwlIndividual
^^^^^^^^^^^^^^^^

.. java:method::  OWLNamedIndividual getOwlIndividual()
   :outertype: Role

getOwlOntology
^^^^^^^^^^^^^^

.. java:method::  OWLOntology getOwlOntology()
   :outertype: Role

getParticipatesInBinding
^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  Collection<? extends Binding> getParticipatesInBinding()
   :outertype: Role

   Gets all property values for the participatesInBinding property.

hasCorrespondsToFrameElement
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  boolean hasCorrespondsToFrameElement()
   :outertype: Role

   Checks if the class has a correspondsToFrameElement property value.

   :return: true if there is a correspondsToFrameElement property value.

hasHasAlias
^^^^^^^^^^^

.. java:method::  boolean hasHasAlias()
   :outertype: Role

   Checks if the class has a hasAlias property value.

   :return: true if there is a hasAlias property value.

hasHasDefinition
^^^^^^^^^^^^^^^^

.. java:method::  boolean hasHasDefinition()
   :outertype: Role

   Checks if the class has a hasDefinition property value.

   :return: true if there is a hasDefinition property value.

hasHasExample
^^^^^^^^^^^^^

.. java:method::  boolean hasHasExample()
   :outertype: Role

   Checks if the class has a hasExample property value.

   :return: true if there is a hasExample property value.

hasHasName
^^^^^^^^^^

.. java:method::  boolean hasHasName()
   :outertype: Role

   Checks if the class has a hasName property value.

   :return: true if there is a hasName property value.

hasHasNameGloss
^^^^^^^^^^^^^^^

.. java:method::  boolean hasHasNameGloss()
   :outertype: Role

   Checks if the class has a hasNameGloss property value.

   :return: true if there is a hasNameGloss property value.

hasHasRoleType
^^^^^^^^^^^^^^

.. java:method::  boolean hasHasRoleType()
   :outertype: Role

   Checks if the class has a hasRoleType property value.

   :return: true if there is a hasRoleType property value.

hasIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method::  boolean hasIsFromLanguage()
   :outertype: Role

   Checks if the class has a isFromLanguage property value.

   :return: true if there is a isFromLanguage property value.

hasIsRoleOfSchema
^^^^^^^^^^^^^^^^^

.. java:method::  boolean hasIsRoleOfSchema()
   :outertype: Role

   Checks if the class has a isRoleOfSchema property value.

   :return: true if there is a isRoleOfSchema property value.

hasParticipatesInBinding
^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  boolean hasParticipatesInBinding()
   :outertype: Role

   Checks if the class has a participatesInBinding property value.

   :return: true if there is a participatesInBinding property value.

removeCorrespondsToFrameElement
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void removeCorrespondsToFrameElement(String oldCorrespondsToFrameElement)
   :outertype: Role

   Removes a correspondsToFrameElement property value.

   :param oldCorrespondsToFrameElement: the correspondsToFrameElement property value to be removed.

removeHasAlias
^^^^^^^^^^^^^^

.. java:method::  void removeHasAlias(Object oldHasAlias)
   :outertype: Role

   Removes a hasAlias property value.

   :param oldHasAlias: the hasAlias property value to be removed.

removeHasDefinition
^^^^^^^^^^^^^^^^^^^

.. java:method::  void removeHasDefinition(String oldHasDefinition)
   :outertype: Role

   Removes a hasDefinition property value.

   :param oldHasDefinition: the hasDefinition property value to be removed.

removeHasExample
^^^^^^^^^^^^^^^^

.. java:method::  void removeHasExample(Example oldHasExample)
   :outertype: Role

   Removes a hasExample property value.

   :param oldHasExample: the hasExample property value to be removed.

removeHasName
^^^^^^^^^^^^^

.. java:method::  void removeHasName(String oldHasName)
   :outertype: Role

   Removes a hasName property value.

   :param oldHasName: the hasName property value to be removed.

removeHasNameGloss
^^^^^^^^^^^^^^^^^^

.. java:method::  void removeHasNameGloss(String oldHasNameGloss)
   :outertype: Role

   Removes a hasNameGloss property value.

   :param oldHasNameGloss: the hasNameGloss property value to be removed.

removeHasRoleType
^^^^^^^^^^^^^^^^^

.. java:method::  void removeHasRoleType(String oldHasRoleType)
   :outertype: Role

   Removes a hasRoleType property value.

   :param oldHasRoleType: the hasRoleType property value to be removed.

removeIsFromLanguage
^^^^^^^^^^^^^^^^^^^^

.. java:method::  void removeIsFromLanguage(String oldIsFromLanguage)
   :outertype: Role

   Removes a isFromLanguage property value.

   :param oldIsFromLanguage: the isFromLanguage property value to be removed.

removeIsRoleOfSchema
^^^^^^^^^^^^^^^^^^^^

.. java:method::  void removeIsRoleOfSchema(Schema oldIsRoleOfSchema)
   :outertype: Role

   Removes a isRoleOfSchema property value.

   :param oldIsRoleOfSchema: the isRoleOfSchema property value to be removed.

removeParticipatesInBinding
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void removeParticipatesInBinding(Binding oldParticipatesInBinding)
   :outertype: Role

   Removes a participatesInBinding property value.

   :param oldParticipatesInBinding: the participatesInBinding property value to be removed.

