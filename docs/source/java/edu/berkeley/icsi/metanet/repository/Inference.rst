.. java:import:: java.util Collection

.. java:import:: org.protege.owl.codegeneration WrappedIndividual

.. java:import:: org.semanticweb.owlapi.model OWLNamedIndividual

.. java:import:: org.semanticweb.owlapi.model OWLOntology

Inference
=========

.. java:package:: edu.berkeley.icsi.metanet.repository
   :noindex:

.. java:type:: public interface Inference extends WrappedIndividual

   Generated by Protege (http://protege.stanford.edu).  Source Class: Inference

Methods
-------
addHasAlias
^^^^^^^^^^^

.. java:method::  void addHasAlias(Object newHasAlias)
   :outertype: Inference

   Adds a hasAlias property value.

   :param newHasAlias: the hasAlias property value to be added

addHasExample
^^^^^^^^^^^^^

.. java:method::  void addHasExample(Example newHasExample)
   :outertype: Inference

   Adds a hasExample property value.

   :param newHasExample: the hasExample property value to be added

addHasInferenceType
^^^^^^^^^^^^^^^^^^^

.. java:method::  void addHasInferenceType(Object newHasInferenceType)
   :outertype: Inference

   Adds a hasInferenceType property value.

   :param newHasInferenceType: the hasInferenceType property value to be added

addHasInferentialContent
^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void addHasInferentialContent(String newHasInferentialContent)
   :outertype: Inference

   Adds a hasInferentialContent property value.

   :param newHasInferentialContent: the hasInferentialContent property value to be added

addHasName
^^^^^^^^^^

.. java:method::  void addHasName(String newHasName)
   :outertype: Inference

   Adds a hasName property value.

   :param newHasName: the hasName property value to be added

addHasNameGloss
^^^^^^^^^^^^^^^

.. java:method::  void addHasNameGloss(String newHasNameGloss)
   :outertype: Inference

   Adds a hasNameGloss property value.

   :param newHasNameGloss: the hasNameGloss property value to be added

addIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method::  void addIsFromLanguage(String newIsFromLanguage)
   :outertype: Inference

   Adds a isFromLanguage property value.

   :param newIsFromLanguage: the isFromLanguage property value to be added

addIsInferenceOfSchema
^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void addIsInferenceOfSchema(Schema newIsInferenceOfSchema)
   :outertype: Inference

   Adds a isInferenceOfSchema property value.

   :param newIsInferenceOfSchema: the isInferenceOfSchema property value to be added

addIsSourceInferenceOf
^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void addIsSourceInferenceOf(Entailment newIsSourceInferenceOf)
   :outertype: Inference

   Adds a isSourceInferenceOf property value.

   :param newIsSourceInferenceOf: the isSourceInferenceOf property value to be added

addIsTargetInferenceOf
^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void addIsTargetInferenceOf(Entailment newIsTargetInferenceOf)
   :outertype: Inference

   Adds a isTargetInferenceOf property value.

   :param newIsTargetInferenceOf: the isTargetInferenceOf property value to be added

delete
^^^^^^

.. java:method::  void delete()
   :outertype: Inference

getHasAlias
^^^^^^^^^^^

.. java:method::  Collection<? extends String> getHasAlias()
   :outertype: Inference

   Gets all property values for the hasAlias property.

getHasExample
^^^^^^^^^^^^^

.. java:method::  Collection<? extends Example> getHasExample()
   :outertype: Inference

   Gets all property values for the hasExample property.

getHasInferenceType
^^^^^^^^^^^^^^^^^^^

.. java:method::  Object getHasInferenceType()
   :outertype: Inference

   Gets the value for the hasInferenceType functional property.

getHasInferentialContent
^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  String getHasInferentialContent()
   :outertype: Inference

   Gets the value for the hasInferentialContent functional property.

getHasName
^^^^^^^^^^

.. java:method::  String getHasName()
   :outertype: Inference

   Gets the value for the hasName functional property.

getHasNameGloss
^^^^^^^^^^^^^^^

.. java:method::  String getHasNameGloss()
   :outertype: Inference

   Gets the value for the hasNameGloss functional property.

getIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method::  String getIsFromLanguage()
   :outertype: Inference

   Gets the value for the isFromLanguage functional property.

getIsInferenceOfSchema
^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  Collection<? extends Schema> getIsInferenceOfSchema()
   :outertype: Inference

   Gets all property values for the isInferenceOfSchema property.

getIsSourceInferenceOf
^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  Entailment getIsSourceInferenceOf()
   :outertype: Inference

   Gets the property value for the isSourceInferenceOf functional property.

getIsTargetInferenceOf
^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  Entailment getIsTargetInferenceOf()
   :outertype: Inference

   Gets the property value for the isTargetInferenceOf functional property.

getOwlIndividual
^^^^^^^^^^^^^^^^

.. java:method::  OWLNamedIndividual getOwlIndividual()
   :outertype: Inference

getOwlOntology
^^^^^^^^^^^^^^

.. java:method::  OWLOntology getOwlOntology()
   :outertype: Inference

hasHasAlias
^^^^^^^^^^^

.. java:method::  boolean hasHasAlias()
   :outertype: Inference

   Checks if the class has a hasAlias property value.

   :return: true if there is a hasAlias property value.

hasHasExample
^^^^^^^^^^^^^

.. java:method::  boolean hasHasExample()
   :outertype: Inference

   Checks if the class has a hasExample property value.

   :return: true if there is a hasExample property value.

hasHasInferenceType
^^^^^^^^^^^^^^^^^^^

.. java:method::  boolean hasHasInferenceType()
   :outertype: Inference

   Checks if the class has a hasInferenceType property value.

   :return: true if there is a hasInferenceType property value.

hasHasInferentialContent
^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  boolean hasHasInferentialContent()
   :outertype: Inference

   Checks if the class has a hasInferentialContent property value.

   :return: true if there is a hasInferentialContent property value.

hasHasName
^^^^^^^^^^

.. java:method::  boolean hasHasName()
   :outertype: Inference

   Checks if the class has a hasName property value.

   :return: true if there is a hasName property value.

hasHasNameGloss
^^^^^^^^^^^^^^^

.. java:method::  boolean hasHasNameGloss()
   :outertype: Inference

   Checks if the class has a hasNameGloss property value.

   :return: true if there is a hasNameGloss property value.

hasIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method::  boolean hasIsFromLanguage()
   :outertype: Inference

   Checks if the class has a isFromLanguage property value.

   :return: true if there is a isFromLanguage property value.

hasIsInferenceOfSchema
^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  boolean hasIsInferenceOfSchema()
   :outertype: Inference

   Checks if the class has a isInferenceOfSchema property value.

   :return: true if there is a isInferenceOfSchema property value.

hasIsSourceInferenceOf
^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  boolean hasIsSourceInferenceOf()
   :outertype: Inference

   Checks if the class has a isSourceInferenceOf property value.

   :return: true if there is a isSourceInferenceOf property value.

hasIsTargetInferenceOf
^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  boolean hasIsTargetInferenceOf()
   :outertype: Inference

   Checks if the class has a isTargetInferenceOf property value.

   :return: true if there is a isTargetInferenceOf property value.

removeHasAlias
^^^^^^^^^^^^^^

.. java:method::  void removeHasAlias(Object oldHasAlias)
   :outertype: Inference

   Removes a hasAlias property value.

   :param oldHasAlias: the hasAlias property value to be removed.

removeHasExample
^^^^^^^^^^^^^^^^

.. java:method::  void removeHasExample(Example oldHasExample)
   :outertype: Inference

   Removes a hasExample property value.

   :param oldHasExample: the hasExample property value to be removed.

removeHasInferenceType
^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void removeHasInferenceType(Object oldHasInferenceType)
   :outertype: Inference

   Removes a hasInferenceType property value.

   :param oldHasInferenceType: the hasInferenceType property value to be removed.

removeHasInferentialContent
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void removeHasInferentialContent(String oldHasInferentialContent)
   :outertype: Inference

   Removes a hasInferentialContent property value.

   :param oldHasInferentialContent: the hasInferentialContent property value to be removed.

removeHasName
^^^^^^^^^^^^^

.. java:method::  void removeHasName(String oldHasName)
   :outertype: Inference

   Removes a hasName property value.

   :param oldHasName: the hasName property value to be removed.

removeHasNameGloss
^^^^^^^^^^^^^^^^^^

.. java:method::  void removeHasNameGloss(String oldHasNameGloss)
   :outertype: Inference

   Removes a hasNameGloss property value.

   :param oldHasNameGloss: the hasNameGloss property value to be removed.

removeIsFromLanguage
^^^^^^^^^^^^^^^^^^^^

.. java:method::  void removeIsFromLanguage(String oldIsFromLanguage)
   :outertype: Inference

   Removes a isFromLanguage property value.

   :param oldIsFromLanguage: the isFromLanguage property value to be removed.

removeIsInferenceOfSchema
^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void removeIsInferenceOfSchema(Schema oldIsInferenceOfSchema)
   :outertype: Inference

   Removes a isInferenceOfSchema property value.

   :param oldIsInferenceOfSchema: the isInferenceOfSchema property value to be removed.

removeIsSourceInferenceOf
^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void removeIsSourceInferenceOf(Entailment oldIsSourceInferenceOf)
   :outertype: Inference

   Removes a isSourceInferenceOf property value.

   :param oldIsSourceInferenceOf: the isSourceInferenceOf property value to be removed.

removeIsTargetInferenceOf
^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void removeIsTargetInferenceOf(Entailment oldIsTargetInferenceOf)
   :outertype: Inference

   Removes a isTargetInferenceOf property value.

   :param oldIsTargetInferenceOf: the isTargetInferenceOf property value to be removed.

