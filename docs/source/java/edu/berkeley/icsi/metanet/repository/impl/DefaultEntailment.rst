.. java:import:: java.util Collection

.. java:import:: org.protege.owl.codegeneration WrappedIndividual

.. java:import:: org.protege.owl.codegeneration.impl WrappedIndividualImpl

.. java:import:: org.protege.owl.codegeneration.inference CodeGenerationInference

.. java:import:: org.semanticweb.owlapi.model IRI

.. java:import:: org.semanticweb.owlapi.model OWLOntology

DefaultEntailment
=================

.. java:package:: edu.berkeley.icsi.metanet.repository.impl
   :noindex:

.. java:type:: public class DefaultEntailment extends WrappedIndividualImpl implements Entailment

   Generated by Protege (http://protege.stanford.edu). Source Class: DefaultEntailment

Constructors
------------
DefaultEntailment
^^^^^^^^^^^^^^^^^

.. java:constructor:: public DefaultEntailment(OWLOntology ontology, IRI iri, CodeGenerationInference inf)
   :outertype: DefaultEntailment

Methods
-------
addDependsOnMappings
^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addDependsOnMappings(Mapping newDependsOnMappings)
   :outertype: DefaultEntailment

addHasAlias
^^^^^^^^^^^

.. java:method:: public void addHasAlias(Object newHasAlias)
   :outertype: DefaultEntailment

addHasExample
^^^^^^^^^^^^^

.. java:method:: public void addHasExample(Example newHasExample)
   :outertype: DefaultEntailment

addHasName
^^^^^^^^^^

.. java:method:: public void addHasName(String newHasName)
   :outertype: DefaultEntailment

addHasNameGloss
^^^^^^^^^^^^^^^

.. java:method:: public void addHasNameGloss(String newHasNameGloss)
   :outertype: DefaultEntailment

addHasSourceInference
^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addHasSourceInference(Inference newHasSourceInference)
   :outertype: DefaultEntailment

addHasTargetInference
^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addHasTargetInference(Inference newHasTargetInference)
   :outertype: DefaultEntailment

addIsEntailmentOfMetaphor
^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addIsEntailmentOfMetaphor(Metaphor newIsEntailmentOfMetaphor)
   :outertype: DefaultEntailment

addIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method:: public void addIsFromLanguage(String newIsFromLanguage)
   :outertype: DefaultEntailment

getDependsOnMappings
^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Mapping> getDependsOnMappings()
   :outertype: DefaultEntailment

getHasAlias
^^^^^^^^^^^

.. java:method:: public Collection<? extends String> getHasAlias()
   :outertype: DefaultEntailment

getHasExample
^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Example> getHasExample()
   :outertype: DefaultEntailment

getHasName
^^^^^^^^^^

.. java:method:: public String getHasName()
   :outertype: DefaultEntailment

getHasNameGloss
^^^^^^^^^^^^^^^

.. java:method:: public String getHasNameGloss()
   :outertype: DefaultEntailment

getHasSourceInference
^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Inference getHasSourceInference()
   :outertype: DefaultEntailment

getHasTargetInference
^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Inference getHasTargetInference()
   :outertype: DefaultEntailment

getIsEntailmentOfMetaphor
^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Metaphor> getIsEntailmentOfMetaphor()
   :outertype: DefaultEntailment

getIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method:: public String getIsFromLanguage()
   :outertype: DefaultEntailment

hasDependsOnMappings
^^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasDependsOnMappings()
   :outertype: DefaultEntailment

hasHasAlias
^^^^^^^^^^^

.. java:method:: public boolean hasHasAlias()
   :outertype: DefaultEntailment

hasHasExample
^^^^^^^^^^^^^

.. java:method:: public boolean hasHasExample()
   :outertype: DefaultEntailment

hasHasName
^^^^^^^^^^

.. java:method:: public boolean hasHasName()
   :outertype: DefaultEntailment

hasHasNameGloss
^^^^^^^^^^^^^^^

.. java:method:: public boolean hasHasNameGloss()
   :outertype: DefaultEntailment

hasHasSourceInference
^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasHasSourceInference()
   :outertype: DefaultEntailment

hasHasTargetInference
^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasHasTargetInference()
   :outertype: DefaultEntailment

hasIsEntailmentOfMetaphor
^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasIsEntailmentOfMetaphor()
   :outertype: DefaultEntailment

hasIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasIsFromLanguage()
   :outertype: DefaultEntailment

removeDependsOnMappings
^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeDependsOnMappings(Mapping oldDependsOnMappings)
   :outertype: DefaultEntailment

removeHasAlias
^^^^^^^^^^^^^^

.. java:method:: public void removeHasAlias(Object oldHasAlias)
   :outertype: DefaultEntailment

removeHasExample
^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasExample(Example oldHasExample)
   :outertype: DefaultEntailment

removeHasName
^^^^^^^^^^^^^

.. java:method:: public void removeHasName(String oldHasName)
   :outertype: DefaultEntailment

removeHasNameGloss
^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasNameGloss(String oldHasNameGloss)
   :outertype: DefaultEntailment

removeHasSourceInference
^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasSourceInference(Inference oldHasSourceInference)
   :outertype: DefaultEntailment

removeHasTargetInference
^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasTargetInference(Inference oldHasTargetInference)
   :outertype: DefaultEntailment

removeIsEntailmentOfMetaphor
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeIsEntailmentOfMetaphor(Metaphor oldIsEntailmentOfMetaphor)
   :outertype: DefaultEntailment

removeIsFromLanguage
^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeIsFromLanguage(String oldIsFromLanguage)
   :outertype: DefaultEntailment

