.. java:import:: java.util Collection

.. java:import:: org.protege.owl.codegeneration WrappedIndividual

.. java:import:: org.protege.owl.codegeneration.impl WrappedIndividualImpl

.. java:import:: org.protege.owl.codegeneration.inference CodeGenerationInference

.. java:import:: org.semanticweb.owlapi.model IRI

.. java:import:: org.semanticweb.owlapi.model OWLOntology

DefaultLinguisticMetaphor
=========================

.. java:package:: edu.berkeley.icsi.metanet.repository.impl
   :noindex:

.. java:type:: public class DefaultLinguisticMetaphor extends WrappedIndividualImpl implements LinguisticMetaphor

   Generated by Protege (http://protege.stanford.edu). Source Class: DefaultLinguisticMetaphor

Constructors
------------
DefaultLinguisticMetaphor
^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:constructor:: public DefaultLinguisticMetaphor(OWLOntology ontology, IRI iri, CodeGenerationInference inf)
   :outertype: DefaultLinguisticMetaphor

Methods
-------
addHasAlias
^^^^^^^^^^^

.. java:method:: public void addHasAlias(Object newHasAlias)
   :outertype: DefaultLinguisticMetaphor

addHasExample
^^^^^^^^^^^^^

.. java:method:: public void addHasExample(Example newHasExample)
   :outertype: DefaultLinguisticMetaphor

addHasLinguisticMetaphorType
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addHasLinguisticMetaphorType(String newHasLinguisticMetaphorType)
   :outertype: DefaultLinguisticMetaphor

addHasLinguisticSource
^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addHasLinguisticSource(String newHasLinguisticSource)
   :outertype: DefaultLinguisticMetaphor

addHasLinguisticTarget
^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addHasLinguisticTarget(String newHasLinguisticTarget)
   :outertype: DefaultLinguisticMetaphor

addHasName
^^^^^^^^^^

.. java:method:: public void addHasName(String newHasName)
   :outertype: DefaultLinguisticMetaphor

addHasNameGloss
^^^^^^^^^^^^^^^

.. java:method:: public void addHasNameGloss(String newHasNameGloss)
   :outertype: DefaultLinguisticMetaphor

addHasVerificationStatus
^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addHasVerificationStatus(String newHasVerificationStatus)
   :outertype: DefaultLinguisticMetaphor

addIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method:: public void addIsFromLanguage(String newIsFromLanguage)
   :outertype: DefaultLinguisticMetaphor

addIsFromSeedMetaphor
^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addIsFromSeedMetaphor(LinguisticMetaphor newIsFromSeedMetaphor)
   :outertype: DefaultLinguisticMetaphor

addIsInstanceOfMetaphor
^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addIsInstanceOfMetaphor(Metaphor newIsInstanceOfMetaphor)
   :outertype: DefaultLinguisticMetaphor

getHasAlias
^^^^^^^^^^^

.. java:method:: public Collection<? extends String> getHasAlias()
   :outertype: DefaultLinguisticMetaphor

getHasExample
^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Example> getHasExample()
   :outertype: DefaultLinguisticMetaphor

getHasLinguisticMetaphorType
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends String> getHasLinguisticMetaphorType()
   :outertype: DefaultLinguisticMetaphor

getHasLinguisticSource
^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public String getHasLinguisticSource()
   :outertype: DefaultLinguisticMetaphor

getHasLinguisticTarget
^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public String getHasLinguisticTarget()
   :outertype: DefaultLinguisticMetaphor

getHasName
^^^^^^^^^^

.. java:method:: public String getHasName()
   :outertype: DefaultLinguisticMetaphor

getHasNameGloss
^^^^^^^^^^^^^^^

.. java:method:: public String getHasNameGloss()
   :outertype: DefaultLinguisticMetaphor

getHasVerificationStatus
^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public String getHasVerificationStatus()
   :outertype: DefaultLinguisticMetaphor

getIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method:: public String getIsFromLanguage()
   :outertype: DefaultLinguisticMetaphor

getIsFromSeedMetaphor
^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public LinguisticMetaphor getIsFromSeedMetaphor()
   :outertype: DefaultLinguisticMetaphor

getIsInstanceOfMetaphor
^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Metaphor> getIsInstanceOfMetaphor()
   :outertype: DefaultLinguisticMetaphor

hasHasAlias
^^^^^^^^^^^

.. java:method:: public boolean hasHasAlias()
   :outertype: DefaultLinguisticMetaphor

hasHasExample
^^^^^^^^^^^^^

.. java:method:: public boolean hasHasExample()
   :outertype: DefaultLinguisticMetaphor

hasHasLinguisticMetaphorType
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasHasLinguisticMetaphorType()
   :outertype: DefaultLinguisticMetaphor

hasHasLinguisticSource
^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasHasLinguisticSource()
   :outertype: DefaultLinguisticMetaphor

hasHasLinguisticTarget
^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasHasLinguisticTarget()
   :outertype: DefaultLinguisticMetaphor

hasHasName
^^^^^^^^^^

.. java:method:: public boolean hasHasName()
   :outertype: DefaultLinguisticMetaphor

hasHasNameGloss
^^^^^^^^^^^^^^^

.. java:method:: public boolean hasHasNameGloss()
   :outertype: DefaultLinguisticMetaphor

hasHasVerificationStatus
^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasHasVerificationStatus()
   :outertype: DefaultLinguisticMetaphor

hasIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasIsFromLanguage()
   :outertype: DefaultLinguisticMetaphor

hasIsFromSeedMetaphor
^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasIsFromSeedMetaphor()
   :outertype: DefaultLinguisticMetaphor

hasIsInstanceOfMetaphor
^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasIsInstanceOfMetaphor()
   :outertype: DefaultLinguisticMetaphor

removeHasAlias
^^^^^^^^^^^^^^

.. java:method:: public void removeHasAlias(Object oldHasAlias)
   :outertype: DefaultLinguisticMetaphor

removeHasExample
^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasExample(Example oldHasExample)
   :outertype: DefaultLinguisticMetaphor

removeHasLinguisticMetaphorType
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasLinguisticMetaphorType(String oldHasLinguisticMetaphorType)
   :outertype: DefaultLinguisticMetaphor

removeHasLinguisticSource
^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasLinguisticSource(String oldHasLinguisticSource)
   :outertype: DefaultLinguisticMetaphor

removeHasLinguisticTarget
^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasLinguisticTarget(String oldHasLinguisticTarget)
   :outertype: DefaultLinguisticMetaphor

removeHasName
^^^^^^^^^^^^^

.. java:method:: public void removeHasName(String oldHasName)
   :outertype: DefaultLinguisticMetaphor

removeHasNameGloss
^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasNameGloss(String oldHasNameGloss)
   :outertype: DefaultLinguisticMetaphor

removeHasVerificationStatus
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasVerificationStatus(String oldHasVerificationStatus)
   :outertype: DefaultLinguisticMetaphor

removeIsFromLanguage
^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeIsFromLanguage(String oldIsFromLanguage)
   :outertype: DefaultLinguisticMetaphor

removeIsFromSeedMetaphor
^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeIsFromSeedMetaphor(LinguisticMetaphor oldIsFromSeedMetaphor)
   :outertype: DefaultLinguisticMetaphor

removeIsInstanceOfMetaphor
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeIsInstanceOfMetaphor(Metaphor oldIsInstanceOfMetaphor)
   :outertype: DefaultLinguisticMetaphor

