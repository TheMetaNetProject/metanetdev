.. java:import:: java.util Collection

.. java:import:: org.protege.owl.codegeneration WrappedIndividual

.. java:import:: org.protege.owl.codegeneration.impl WrappedIndividualImpl

.. java:import:: org.protege.owl.codegeneration.inference CodeGenerationInference

.. java:import:: org.semanticweb.owlapi.model IRI

.. java:import:: org.semanticweb.owlapi.model OWLOntology

DefaultSchemaFamily
===================

.. java:package:: edu.berkeley.icsi.metanet.repository.impl
   :noindex:

.. java:type:: public class DefaultSchemaFamily extends WrappedIndividualImpl implements SchemaFamily

   Generated by Protege (http://protege.stanford.edu). Source Class: DefaultSchemaFamily

Constructors
------------
DefaultSchemaFamily
^^^^^^^^^^^^^^^^^^^

.. java:constructor:: public DefaultSchemaFamily(OWLOntology ontology, IRI iri, CodeGenerationInference inf)
   :outertype: DefaultSchemaFamily

Methods
-------
addHasAlias
^^^^^^^^^^^

.. java:method:: public void addHasAlias(Object newHasAlias)
   :outertype: DefaultSchemaFamily

addHasExample
^^^^^^^^^^^^^

.. java:method:: public void addHasExample(Example newHasExample)
   :outertype: DefaultSchemaFamily

addHasName
^^^^^^^^^^

.. java:method:: public void addHasName(String newHasName)
   :outertype: DefaultSchemaFamily

addHasNameGloss
^^^^^^^^^^^^^^^

.. java:method:: public void addHasNameGloss(String newHasNameGloss)
   :outertype: DefaultSchemaFamily

addHasSchemas
^^^^^^^^^^^^^

.. java:method:: public void addHasSchemas(Schema newHasSchemas)
   :outertype: DefaultSchemaFamily

addIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method:: public void addIsFromLanguage(String newIsFromLanguage)
   :outertype: DefaultSchemaFamily

addIsSchemaSubfamilyOf
^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addIsSchemaSubfamilyOf(SchemaFamily newIsSchemaSubfamilyOf)
   :outertype: DefaultSchemaFamily

addIsSchemaSuperfamilyOf
^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addIsSchemaSuperfamilyOf(SchemaFamily newIsSchemaSuperfamilyOf)
   :outertype: DefaultSchemaFamily

getHasAlias
^^^^^^^^^^^

.. java:method:: public Collection<? extends String> getHasAlias()
   :outertype: DefaultSchemaFamily

getHasExample
^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Example> getHasExample()
   :outertype: DefaultSchemaFamily

getHasName
^^^^^^^^^^

.. java:method:: public String getHasName()
   :outertype: DefaultSchemaFamily

getHasNameGloss
^^^^^^^^^^^^^^^

.. java:method:: public String getHasNameGloss()
   :outertype: DefaultSchemaFamily

getHasSchemas
^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Schema> getHasSchemas()
   :outertype: DefaultSchemaFamily

getIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method:: public String getIsFromLanguage()
   :outertype: DefaultSchemaFamily

getIsSchemaSubfamilyOf
^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends SchemaFamily> getIsSchemaSubfamilyOf()
   :outertype: DefaultSchemaFamily

getIsSchemaSuperfamilyOf
^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Collection<? extends SchemaFamily> getIsSchemaSuperfamilyOf()
   :outertype: DefaultSchemaFamily

hasHasAlias
^^^^^^^^^^^

.. java:method:: public boolean hasHasAlias()
   :outertype: DefaultSchemaFamily

hasHasExample
^^^^^^^^^^^^^

.. java:method:: public boolean hasHasExample()
   :outertype: DefaultSchemaFamily

hasHasName
^^^^^^^^^^

.. java:method:: public boolean hasHasName()
   :outertype: DefaultSchemaFamily

hasHasNameGloss
^^^^^^^^^^^^^^^

.. java:method:: public boolean hasHasNameGloss()
   :outertype: DefaultSchemaFamily

hasHasSchemas
^^^^^^^^^^^^^

.. java:method:: public boolean hasHasSchemas()
   :outertype: DefaultSchemaFamily

hasIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasIsFromLanguage()
   :outertype: DefaultSchemaFamily

hasIsSchemaSubfamilyOf
^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasIsSchemaSubfamilyOf()
   :outertype: DefaultSchemaFamily

hasIsSchemaSuperfamilyOf
^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasIsSchemaSuperfamilyOf()
   :outertype: DefaultSchemaFamily

removeHasAlias
^^^^^^^^^^^^^^

.. java:method:: public void removeHasAlias(Object oldHasAlias)
   :outertype: DefaultSchemaFamily

removeHasExample
^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasExample(Example oldHasExample)
   :outertype: DefaultSchemaFamily

removeHasName
^^^^^^^^^^^^^

.. java:method:: public void removeHasName(String oldHasName)
   :outertype: DefaultSchemaFamily

removeHasNameGloss
^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasNameGloss(String oldHasNameGloss)
   :outertype: DefaultSchemaFamily

removeHasSchemas
^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasSchemas(Schema oldHasSchemas)
   :outertype: DefaultSchemaFamily

removeIsFromLanguage
^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeIsFromLanguage(String oldIsFromLanguage)
   :outertype: DefaultSchemaFamily

removeIsSchemaSubfamilyOf
^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeIsSchemaSubfamilyOf(SchemaFamily oldIsSchemaSubfamilyOf)
   :outertype: DefaultSchemaFamily

removeIsSchemaSuperfamilyOf
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeIsSchemaSuperfamilyOf(SchemaFamily oldIsSchemaSuperfamilyOf)
   :outertype: DefaultSchemaFamily

