.. java:import:: java.util Collection

.. java:import:: org.protege.owl.codegeneration WrappedIndividual

.. java:import:: org.protege.owl.codegeneration.impl WrappedIndividualImpl

.. java:import:: org.protege.owl.codegeneration.inference CodeGenerationInference

.. java:import:: org.semanticweb.owlapi.model IRI

.. java:import:: org.semanticweb.owlapi.model OWLOntology

DefaultLexicalUnit
==================

.. java:package:: edu.berkeley.icsi.metanet.repository.impl
   :noindex:

.. java:type:: public class DefaultLexicalUnit extends WrappedIndividualImpl implements LexicalUnit

   Generated by Protege (http://protege.stanford.edu). Source Class: DefaultLexicalUnit

Constructors
------------
DefaultLexicalUnit
^^^^^^^^^^^^^^^^^^

.. java:constructor:: public DefaultLexicalUnit(OWLOntology ontology, IRI iri, CodeGenerationInference inf)
   :outertype: DefaultLexicalUnit

Methods
-------
addHasAlias
^^^^^^^^^^^

.. java:method:: public void addHasAlias(Object newHasAlias)
   :outertype: DefaultLexicalUnit

addHasExample
^^^^^^^^^^^^^

.. java:method:: public void addHasExample(Example newHasExample)
   :outertype: DefaultLexicalUnit

addHasLemma
^^^^^^^^^^^

.. java:method:: public void addHasLemma(String newHasLemma)
   :outertype: DefaultLexicalUnit

addHasName
^^^^^^^^^^

.. java:method:: public void addHasName(String newHasName)
   :outertype: DefaultLexicalUnit

addHasNameGloss
^^^^^^^^^^^^^^^

.. java:method:: public void addHasNameGloss(String newHasNameGloss)
   :outertype: DefaultLexicalUnit

addIsDefinedRelativeToSchema
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void addIsDefinedRelativeToSchema(Schema newIsDefinedRelativeToSchema)
   :outertype: DefaultLexicalUnit

addIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method:: public void addIsFromLanguage(String newIsFromLanguage)
   :outertype: DefaultLexicalUnit

getHasAlias
^^^^^^^^^^^

.. java:method:: public Collection<? extends String> getHasAlias()
   :outertype: DefaultLexicalUnit

getHasExample
^^^^^^^^^^^^^

.. java:method:: public Collection<? extends Example> getHasExample()
   :outertype: DefaultLexicalUnit

getHasLemma
^^^^^^^^^^^

.. java:method:: public String getHasLemma()
   :outertype: DefaultLexicalUnit

getHasName
^^^^^^^^^^

.. java:method:: public String getHasName()
   :outertype: DefaultLexicalUnit

getHasNameGloss
^^^^^^^^^^^^^^^

.. java:method:: public String getHasNameGloss()
   :outertype: DefaultLexicalUnit

getIsDefinedRelativeToSchema
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public Schema getIsDefinedRelativeToSchema()
   :outertype: DefaultLexicalUnit

getIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method:: public String getIsFromLanguage()
   :outertype: DefaultLexicalUnit

hasHasAlias
^^^^^^^^^^^

.. java:method:: public boolean hasHasAlias()
   :outertype: DefaultLexicalUnit

hasHasExample
^^^^^^^^^^^^^

.. java:method:: public boolean hasHasExample()
   :outertype: DefaultLexicalUnit

hasHasLemma
^^^^^^^^^^^

.. java:method:: public boolean hasHasLemma()
   :outertype: DefaultLexicalUnit

hasHasName
^^^^^^^^^^

.. java:method:: public boolean hasHasName()
   :outertype: DefaultLexicalUnit

hasHasNameGloss
^^^^^^^^^^^^^^^

.. java:method:: public boolean hasHasNameGloss()
   :outertype: DefaultLexicalUnit

hasIsDefinedRelativeToSchema
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasIsDefinedRelativeToSchema()
   :outertype: DefaultLexicalUnit

hasIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method:: public boolean hasIsFromLanguage()
   :outertype: DefaultLexicalUnit

removeHasAlias
^^^^^^^^^^^^^^

.. java:method:: public void removeHasAlias(Object oldHasAlias)
   :outertype: DefaultLexicalUnit

removeHasExample
^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasExample(Example oldHasExample)
   :outertype: DefaultLexicalUnit

removeHasLemma
^^^^^^^^^^^^^^

.. java:method:: public void removeHasLemma(String oldHasLemma)
   :outertype: DefaultLexicalUnit

removeHasName
^^^^^^^^^^^^^

.. java:method:: public void removeHasName(String oldHasName)
   :outertype: DefaultLexicalUnit

removeHasNameGloss
^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeHasNameGloss(String oldHasNameGloss)
   :outertype: DefaultLexicalUnit

removeIsDefinedRelativeToSchema
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeIsDefinedRelativeToSchema(Schema oldIsDefinedRelativeToSchema)
   :outertype: DefaultLexicalUnit

removeIsFromLanguage
^^^^^^^^^^^^^^^^^^^^

.. java:method:: public void removeIsFromLanguage(String oldIsFromLanguage)
   :outertype: DefaultLexicalUnit

