.. java:import:: java.util Collection

.. java:import:: org.protege.owl.codegeneration WrappedIndividual

.. java:import:: org.semanticweb.owlapi.model OWLNamedIndividual

.. java:import:: org.semanticweb.owlapi.model OWLOntology

LinguisticMetaphor
==================

.. java:package:: edu.berkeley.icsi.metanet.repository
   :noindex:

.. java:type:: public interface LinguisticMetaphor extends WrappedIndividual

   Generated by Protege (http://protege.stanford.edu).  Source Class: LinguisticMetaphor

Methods
-------
addHasAlias
^^^^^^^^^^^

.. java:method::  void addHasAlias(Object newHasAlias)
   :outertype: LinguisticMetaphor

   Adds a hasAlias property value.

   :param newHasAlias: the hasAlias property value to be added

addHasExample
^^^^^^^^^^^^^

.. java:method::  void addHasExample(Example newHasExample)
   :outertype: LinguisticMetaphor

   Adds a hasExample property value.

   :param newHasExample: the hasExample property value to be added

addHasLinguisticMetaphorType
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void addHasLinguisticMetaphorType(String newHasLinguisticMetaphorType)
   :outertype: LinguisticMetaphor

   Adds a hasLinguisticMetaphorType property value.

   :param newHasLinguisticMetaphorType: the hasLinguisticMetaphorType property value to be added

addHasLinguisticSource
^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void addHasLinguisticSource(String newHasLinguisticSource)
   :outertype: LinguisticMetaphor

   Adds a hasLinguisticSource property value.

   :param newHasLinguisticSource: the hasLinguisticSource property value to be added

addHasLinguisticTarget
^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void addHasLinguisticTarget(String newHasLinguisticTarget)
   :outertype: LinguisticMetaphor

   Adds a hasLinguisticTarget property value.

   :param newHasLinguisticTarget: the hasLinguisticTarget property value to be added

addHasName
^^^^^^^^^^

.. java:method::  void addHasName(String newHasName)
   :outertype: LinguisticMetaphor

   Adds a hasName property value.

   :param newHasName: the hasName property value to be added

addHasNameGloss
^^^^^^^^^^^^^^^

.. java:method::  void addHasNameGloss(String newHasNameGloss)
   :outertype: LinguisticMetaphor

   Adds a hasNameGloss property value.

   :param newHasNameGloss: the hasNameGloss property value to be added

addHasVerificationStatus
^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void addHasVerificationStatus(String newHasVerificationStatus)
   :outertype: LinguisticMetaphor

   Adds a hasVerificationStatus property value.

   :param newHasVerificationStatus: the hasVerificationStatus property value to be added

addIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method::  void addIsFromLanguage(String newIsFromLanguage)
   :outertype: LinguisticMetaphor

   Adds a isFromLanguage property value.

   :param newIsFromLanguage: the isFromLanguage property value to be added

addIsFromSeedMetaphor
^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void addIsFromSeedMetaphor(LinguisticMetaphor newIsFromSeedMetaphor)
   :outertype: LinguisticMetaphor

   Adds a isFromSeedMetaphor property value.

   :param newIsFromSeedMetaphor: the isFromSeedMetaphor property value to be added

addIsInstanceOfMetaphor
^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void addIsInstanceOfMetaphor(Metaphor newIsInstanceOfMetaphor)
   :outertype: LinguisticMetaphor

   Adds a isInstanceOfMetaphor property value.

   :param newIsInstanceOfMetaphor: the isInstanceOfMetaphor property value to be added

delete
^^^^^^

.. java:method::  void delete()
   :outertype: LinguisticMetaphor

getHasAlias
^^^^^^^^^^^

.. java:method::  Collection<? extends String> getHasAlias()
   :outertype: LinguisticMetaphor

   Gets all property values for the hasAlias property.

getHasExample
^^^^^^^^^^^^^

.. java:method::  Collection<? extends Example> getHasExample()
   :outertype: LinguisticMetaphor

   Gets all property values for the hasExample property.

getHasLinguisticMetaphorType
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  Collection<? extends String> getHasLinguisticMetaphorType()
   :outertype: LinguisticMetaphor

   Gets all property values for the hasLinguisticMetaphorType property.

getHasLinguisticSource
^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  String getHasLinguisticSource()
   :outertype: LinguisticMetaphor

   Gets the value for the hasLinguisticSource functional property.

getHasLinguisticTarget
^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  String getHasLinguisticTarget()
   :outertype: LinguisticMetaphor

   Gets the value for the hasLinguisticTarget functional property.

getHasName
^^^^^^^^^^

.. java:method::  String getHasName()
   :outertype: LinguisticMetaphor

   Gets the value for the hasName functional property.

getHasNameGloss
^^^^^^^^^^^^^^^

.. java:method::  String getHasNameGloss()
   :outertype: LinguisticMetaphor

   Gets the value for the hasNameGloss functional property.

getHasVerificationStatus
^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  String getHasVerificationStatus()
   :outertype: LinguisticMetaphor

   Gets the value for the hasVerificationStatus functional property.

getIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method::  String getIsFromLanguage()
   :outertype: LinguisticMetaphor

   Gets the value for the isFromLanguage functional property.

getIsFromSeedMetaphor
^^^^^^^^^^^^^^^^^^^^^

.. java:method::  LinguisticMetaphor getIsFromSeedMetaphor()
   :outertype: LinguisticMetaphor

   Gets the property value for the isFromSeedMetaphor functional property.

getIsInstanceOfMetaphor
^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  Collection<? extends Metaphor> getIsInstanceOfMetaphor()
   :outertype: LinguisticMetaphor

   Gets all property values for the isInstanceOfMetaphor property.

getOwlIndividual
^^^^^^^^^^^^^^^^

.. java:method::  OWLNamedIndividual getOwlIndividual()
   :outertype: LinguisticMetaphor

getOwlOntology
^^^^^^^^^^^^^^

.. java:method::  OWLOntology getOwlOntology()
   :outertype: LinguisticMetaphor

hasHasAlias
^^^^^^^^^^^

.. java:method::  boolean hasHasAlias()
   :outertype: LinguisticMetaphor

   Checks if the class has a hasAlias property value.

   :return: true if there is a hasAlias property value.

hasHasExample
^^^^^^^^^^^^^

.. java:method::  boolean hasHasExample()
   :outertype: LinguisticMetaphor

   Checks if the class has a hasExample property value.

   :return: true if there is a hasExample property value.

hasHasLinguisticMetaphorType
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  boolean hasHasLinguisticMetaphorType()
   :outertype: LinguisticMetaphor

   Checks if the class has a hasLinguisticMetaphorType property value.

   :return: true if there is a hasLinguisticMetaphorType property value.

hasHasLinguisticSource
^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  boolean hasHasLinguisticSource()
   :outertype: LinguisticMetaphor

   Checks if the class has a hasLinguisticSource property value.

   :return: true if there is a hasLinguisticSource property value.

hasHasLinguisticTarget
^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  boolean hasHasLinguisticTarget()
   :outertype: LinguisticMetaphor

   Checks if the class has a hasLinguisticTarget property value.

   :return: true if there is a hasLinguisticTarget property value.

hasHasName
^^^^^^^^^^

.. java:method::  boolean hasHasName()
   :outertype: LinguisticMetaphor

   Checks if the class has a hasName property value.

   :return: true if there is a hasName property value.

hasHasNameGloss
^^^^^^^^^^^^^^^

.. java:method::  boolean hasHasNameGloss()
   :outertype: LinguisticMetaphor

   Checks if the class has a hasNameGloss property value.

   :return: true if there is a hasNameGloss property value.

hasHasVerificationStatus
^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  boolean hasHasVerificationStatus()
   :outertype: LinguisticMetaphor

   Checks if the class has a hasVerificationStatus property value.

   :return: true if there is a hasVerificationStatus property value.

hasIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method::  boolean hasIsFromLanguage()
   :outertype: LinguisticMetaphor

   Checks if the class has a isFromLanguage property value.

   :return: true if there is a isFromLanguage property value.

hasIsFromSeedMetaphor
^^^^^^^^^^^^^^^^^^^^^

.. java:method::  boolean hasIsFromSeedMetaphor()
   :outertype: LinguisticMetaphor

   Checks if the class has a isFromSeedMetaphor property value.

   :return: true if there is a isFromSeedMetaphor property value.

hasIsInstanceOfMetaphor
^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  boolean hasIsInstanceOfMetaphor()
   :outertype: LinguisticMetaphor

   Checks if the class has a isInstanceOfMetaphor property value.

   :return: true if there is a isInstanceOfMetaphor property value.

removeHasAlias
^^^^^^^^^^^^^^

.. java:method::  void removeHasAlias(Object oldHasAlias)
   :outertype: LinguisticMetaphor

   Removes a hasAlias property value.

   :param oldHasAlias: the hasAlias property value to be removed.

removeHasExample
^^^^^^^^^^^^^^^^

.. java:method::  void removeHasExample(Example oldHasExample)
   :outertype: LinguisticMetaphor

   Removes a hasExample property value.

   :param oldHasExample: the hasExample property value to be removed.

removeHasLinguisticMetaphorType
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void removeHasLinguisticMetaphorType(String oldHasLinguisticMetaphorType)
   :outertype: LinguisticMetaphor

   Removes a hasLinguisticMetaphorType property value.

   :param oldHasLinguisticMetaphorType: the hasLinguisticMetaphorType property value to be removed.

removeHasLinguisticSource
^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void removeHasLinguisticSource(String oldHasLinguisticSource)
   :outertype: LinguisticMetaphor

   Removes a hasLinguisticSource property value.

   :param oldHasLinguisticSource: the hasLinguisticSource property value to be removed.

removeHasLinguisticTarget
^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void removeHasLinguisticTarget(String oldHasLinguisticTarget)
   :outertype: LinguisticMetaphor

   Removes a hasLinguisticTarget property value.

   :param oldHasLinguisticTarget: the hasLinguisticTarget property value to be removed.

removeHasName
^^^^^^^^^^^^^

.. java:method::  void removeHasName(String oldHasName)
   :outertype: LinguisticMetaphor

   Removes a hasName property value.

   :param oldHasName: the hasName property value to be removed.

removeHasNameGloss
^^^^^^^^^^^^^^^^^^

.. java:method::  void removeHasNameGloss(String oldHasNameGloss)
   :outertype: LinguisticMetaphor

   Removes a hasNameGloss property value.

   :param oldHasNameGloss: the hasNameGloss property value to be removed.

removeHasVerificationStatus
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void removeHasVerificationStatus(String oldHasVerificationStatus)
   :outertype: LinguisticMetaphor

   Removes a hasVerificationStatus property value.

   :param oldHasVerificationStatus: the hasVerificationStatus property value to be removed.

removeIsFromLanguage
^^^^^^^^^^^^^^^^^^^^

.. java:method::  void removeIsFromLanguage(String oldIsFromLanguage)
   :outertype: LinguisticMetaphor

   Removes a isFromLanguage property value.

   :param oldIsFromLanguage: the isFromLanguage property value to be removed.

removeIsFromSeedMetaphor
^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void removeIsFromSeedMetaphor(LinguisticMetaphor oldIsFromSeedMetaphor)
   :outertype: LinguisticMetaphor

   Removes a isFromSeedMetaphor property value.

   :param oldIsFromSeedMetaphor: the isFromSeedMetaphor property value to be removed.

removeIsInstanceOfMetaphor
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void removeIsInstanceOfMetaphor(Metaphor oldIsInstanceOfMetaphor)
   :outertype: LinguisticMetaphor

   Removes a isInstanceOfMetaphor property value.

   :param oldIsInstanceOfMetaphor: the isInstanceOfMetaphor property value to be removed.

