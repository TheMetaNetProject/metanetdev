.. java:import:: java.util Collection

.. java:import:: org.protege.owl.codegeneration WrappedIndividual

.. java:import:: org.semanticweb.owlapi.model OWLNamedIndividual

.. java:import:: org.semanticweb.owlapi.model OWLOntology

Binding
=======

.. java:package:: edu.berkeley.icsi.metanet.repository
   :noindex:

.. java:type:: public interface Binding extends WrappedIndividual

   Generated by Protege (http://protege.stanford.edu).  Source Class: Binding

Methods
-------
addHasAlias
^^^^^^^^^^^

.. java:method::  void addHasAlias(Object newHasAlias)
   :outertype: Binding

   Adds a hasAlias property value.

   :param newHasAlias: the hasAlias property value to be added

addHasBoundRole1
^^^^^^^^^^^^^^^^

.. java:method::  void addHasBoundRole1(Role newHasBoundRole1)
   :outertype: Binding

   Adds a hasBoundRole1 property value.

   :param newHasBoundRole1: the hasBoundRole1 property value to be added

addHasBoundRole2
^^^^^^^^^^^^^^^^

.. java:method::  void addHasBoundRole2(Role newHasBoundRole2)
   :outertype: Binding

   Adds a hasBoundRole2 property value.

   :param newHasBoundRole2: the hasBoundRole2 property value to be added

addHasBoundRoles
^^^^^^^^^^^^^^^^

.. java:method::  void addHasBoundRoles(Role newHasBoundRoles)
   :outertype: Binding

   Adds a hasBoundRoles property value.

   :param newHasBoundRoles: the hasBoundRoles property value to be added

addHasExample
^^^^^^^^^^^^^

.. java:method::  void addHasExample(Example newHasExample)
   :outertype: Binding

   Adds a hasExample property value.

   :param newHasExample: the hasExample property value to be added

addHasName
^^^^^^^^^^

.. java:method::  void addHasName(String newHasName)
   :outertype: Binding

   Adds a hasName property value.

   :param newHasName: the hasName property value to be added

addHasNameGloss
^^^^^^^^^^^^^^^

.. java:method::  void addHasNameGloss(String newHasNameGloss)
   :outertype: Binding

   Adds a hasNameGloss property value.

   :param newHasNameGloss: the hasNameGloss property value to be added

addIsBindingInSchema
^^^^^^^^^^^^^^^^^^^^

.. java:method::  void addIsBindingInSchema(Schema newIsBindingInSchema)
   :outertype: Binding

   Adds a isBindingInSchema property value.

   :param newIsBindingInSchema: the isBindingInSchema property value to be added

addIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method::  void addIsFromLanguage(String newIsFromLanguage)
   :outertype: Binding

   Adds a isFromLanguage property value.

   :param newIsFromLanguage: the isFromLanguage property value to be added

delete
^^^^^^

.. java:method::  void delete()
   :outertype: Binding

getHasAlias
^^^^^^^^^^^

.. java:method::  Collection<? extends String> getHasAlias()
   :outertype: Binding

   Gets all property values for the hasAlias property.

getHasBoundRole1
^^^^^^^^^^^^^^^^

.. java:method::  Role getHasBoundRole1()
   :outertype: Binding

   Gets the property value for the hasBoundRole1 functional property.

getHasBoundRole2
^^^^^^^^^^^^^^^^

.. java:method::  Role getHasBoundRole2()
   :outertype: Binding

   Gets the property value for the hasBoundRole2 functional property.

getHasBoundRoles
^^^^^^^^^^^^^^^^

.. java:method::  Collection<? extends Role> getHasBoundRoles()
   :outertype: Binding

   Gets all property values for the hasBoundRoles property.

getHasExample
^^^^^^^^^^^^^

.. java:method::  Collection<? extends Example> getHasExample()
   :outertype: Binding

   Gets all property values for the hasExample property.

getHasName
^^^^^^^^^^

.. java:method::  String getHasName()
   :outertype: Binding

   Gets the value for the hasName functional property.

getHasNameGloss
^^^^^^^^^^^^^^^

.. java:method::  String getHasNameGloss()
   :outertype: Binding

   Gets the value for the hasNameGloss functional property.

getIsBindingInSchema
^^^^^^^^^^^^^^^^^^^^

.. java:method::  Collection<? extends Schema> getIsBindingInSchema()
   :outertype: Binding

   Gets all property values for the isBindingInSchema property.

getIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method::  String getIsFromLanguage()
   :outertype: Binding

   Gets the value for the isFromLanguage functional property.

getOwlIndividual
^^^^^^^^^^^^^^^^

.. java:method::  OWLNamedIndividual getOwlIndividual()
   :outertype: Binding

getOwlOntology
^^^^^^^^^^^^^^

.. java:method::  OWLOntology getOwlOntology()
   :outertype: Binding

hasHasAlias
^^^^^^^^^^^

.. java:method::  boolean hasHasAlias()
   :outertype: Binding

   Checks if the class has a hasAlias property value.

   :return: true if there is a hasAlias property value.

hasHasBoundRole1
^^^^^^^^^^^^^^^^

.. java:method::  boolean hasHasBoundRole1()
   :outertype: Binding

   Checks if the class has a hasBoundRole1 property value.

   :return: true if there is a hasBoundRole1 property value.

hasHasBoundRole2
^^^^^^^^^^^^^^^^

.. java:method::  boolean hasHasBoundRole2()
   :outertype: Binding

   Checks if the class has a hasBoundRole2 property value.

   :return: true if there is a hasBoundRole2 property value.

hasHasBoundRoles
^^^^^^^^^^^^^^^^

.. java:method::  boolean hasHasBoundRoles()
   :outertype: Binding

   Checks if the class has a hasBoundRoles property value.

   :return: true if there is a hasBoundRoles property value.

hasHasExample
^^^^^^^^^^^^^

.. java:method::  boolean hasHasExample()
   :outertype: Binding

   Checks if the class has a hasExample property value.

   :return: true if there is a hasExample property value.

hasHasName
^^^^^^^^^^

.. java:method::  boolean hasHasName()
   :outertype: Binding

   Checks if the class has a hasName property value.

   :return: true if there is a hasName property value.

hasHasNameGloss
^^^^^^^^^^^^^^^

.. java:method::  boolean hasHasNameGloss()
   :outertype: Binding

   Checks if the class has a hasNameGloss property value.

   :return: true if there is a hasNameGloss property value.

hasIsBindingInSchema
^^^^^^^^^^^^^^^^^^^^

.. java:method::  boolean hasIsBindingInSchema()
   :outertype: Binding

   Checks if the class has a isBindingInSchema property value.

   :return: true if there is a isBindingInSchema property value.

hasIsFromLanguage
^^^^^^^^^^^^^^^^^

.. java:method::  boolean hasIsFromLanguage()
   :outertype: Binding

   Checks if the class has a isFromLanguage property value.

   :return: true if there is a isFromLanguage property value.

removeHasAlias
^^^^^^^^^^^^^^

.. java:method::  void removeHasAlias(Object oldHasAlias)
   :outertype: Binding

   Removes a hasAlias property value.

   :param oldHasAlias: the hasAlias property value to be removed.

removeHasBoundRole1
^^^^^^^^^^^^^^^^^^^

.. java:method::  void removeHasBoundRole1(Role oldHasBoundRole1)
   :outertype: Binding

   Removes a hasBoundRole1 property value.

   :param oldHasBoundRole1: the hasBoundRole1 property value to be removed.

removeHasBoundRole2
^^^^^^^^^^^^^^^^^^^

.. java:method::  void removeHasBoundRole2(Role oldHasBoundRole2)
   :outertype: Binding

   Removes a hasBoundRole2 property value.

   :param oldHasBoundRole2: the hasBoundRole2 property value to be removed.

removeHasBoundRoles
^^^^^^^^^^^^^^^^^^^

.. java:method::  void removeHasBoundRoles(Role oldHasBoundRoles)
   :outertype: Binding

   Removes a hasBoundRoles property value.

   :param oldHasBoundRoles: the hasBoundRoles property value to be removed.

removeHasExample
^^^^^^^^^^^^^^^^

.. java:method::  void removeHasExample(Example oldHasExample)
   :outertype: Binding

   Removes a hasExample property value.

   :param oldHasExample: the hasExample property value to be removed.

removeHasName
^^^^^^^^^^^^^

.. java:method::  void removeHasName(String oldHasName)
   :outertype: Binding

   Removes a hasName property value.

   :param oldHasName: the hasName property value to be removed.

removeHasNameGloss
^^^^^^^^^^^^^^^^^^

.. java:method::  void removeHasNameGloss(String oldHasNameGloss)
   :outertype: Binding

   Removes a hasNameGloss property value.

   :param oldHasNameGloss: the hasNameGloss property value to be removed.

removeIsBindingInSchema
^^^^^^^^^^^^^^^^^^^^^^^

.. java:method::  void removeIsBindingInSchema(Schema oldIsBindingInSchema)
   :outertype: Binding

   Removes a isBindingInSchema property value.

   :param oldIsBindingInSchema: the isBindingInSchema property value to be removed.

removeIsFromLanguage
^^^^^^^^^^^^^^^^^^^^

.. java:method::  void removeIsFromLanguage(String oldIsFromLanguage)
   :outertype: Binding

   Removes a isFromLanguage property value.

   :param oldIsFromLanguage: the isFromLanguage property value to be removed.

